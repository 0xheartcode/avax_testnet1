{
	"id": "7c6ec87bc62df92899f3d0b597b62137",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"2_Playground/Reentrancy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport 'https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol';\n\ncontract Reentrance {\n  \n  using SafeMath for uint256;\n  mapping(address => uint) public balances;\n\n  function donate(address _to) public payable {\n    balances[_to] = balances[_to].add(msg.value);\n  }\n\n  function balanceOf(address _who) public view returns (uint balance) {\n    return balances[_who];\n  }\n\n  function withdraw(uint _amount) public {\n    if(balances[msg.sender] >= _amount) {\n      (bool result,) = msg.sender.call{value:_amount}(\"\");\n      if(result) {\n        _amount;\n      }\n      balances[msg.sender] -= _amount;\n    }\n  }\n\n  receive() external payable {}\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"2_Playground/Reentrancy.sol": {
				"Reentrance": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"2_Playground/Reentrancy.sol\":169:747  contract Reentrance {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"2_Playground/Reentrancy.sol\":169:747  contract Reentrance {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x362a95\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"2_Playground/Reentrancy.sol\":271:370  function donate(address _to) public payable {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"2_Playground/Reentrancy.sol\":226:266  mapping(address => uint) public balances */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_15:\n      tag_16\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"2_Playground/Reentrancy.sol\":478:712  function withdraw(uint _amount) public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"2_Playground/Reentrancy.sol\":374:474  function balanceOf(address _who) public view returns (uint balance) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"2_Playground/Reentrancy.sol\":271:370  function donate(address _to) public payable {... */\n    tag_12:\n        /* \"2_Playground/Reentrancy.sol\":337:365  balances[_to].add(msg.value) */\n      tag_30\n        /* \"2_Playground/Reentrancy.sol\":355:364  msg.value */\n      callvalue\n        /* \"2_Playground/Reentrancy.sol\":337:345  balances */\n      0x00\n        /* \"2_Playground/Reentrancy.sol\":337:350  balances[_to] */\n      dup1\n        /* \"2_Playground/Reentrancy.sol\":346:349  _to */\n      dup5\n        /* \"2_Playground/Reentrancy.sol\":337:350  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"2_Playground/Reentrancy.sol\":337:354  balances[_to].add */\n      tag_31\n      swap1\n        /* \"2_Playground/Reentrancy.sol\":337:365  balances[_to].add(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_30:\n        /* \"2_Playground/Reentrancy.sol\":321:329  balances */\n      0x00\n        /* \"2_Playground/Reentrancy.sol\":321:334  balances[_to] */\n      dup1\n        /* \"2_Playground/Reentrancy.sol\":330:333  _to */\n      dup4\n        /* \"2_Playground/Reentrancy.sol\":321:334  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"2_Playground/Reentrancy.sol\":321:365  balances[_to] = balances[_to].add(msg.value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"2_Playground/Reentrancy.sol\":271:370  function donate(address _to) public payable {... */\n      pop\n      jump\t// out\n        /* \"2_Playground/Reentrancy.sol\":226:266  mapping(address => uint) public balances */\n    tag_16:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"2_Playground/Reentrancy.sol\":478:712  function withdraw(uint _amount) public {... */\n    tag_23:\n        /* \"2_Playground/Reentrancy.sol\":550:557  _amount */\n      dup1\n        /* \"2_Playground/Reentrancy.sol\":526:534  balances */\n      0x00\n        /* \"2_Playground/Reentrancy.sol\":526:546  balances[msg.sender] */\n      dup1\n        /* \"2_Playground/Reentrancy.sol\":535:545  msg.sender */\n      caller\n        /* \"2_Playground/Reentrancy.sol\":526:546  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"2_Playground/Reentrancy.sol\":526:557  balances[msg.sender] >= _amount */\n      lt\n        /* \"2_Playground/Reentrancy.sol\":523:708  if(balances[msg.sender] >= _amount) {... */\n      tag_33\n      jumpi\n        /* \"2_Playground/Reentrancy.sol\":568:579  bool result */\n      0x00\n        /* \"2_Playground/Reentrancy.sol\":584:594  msg.sender */\n      caller\n        /* \"2_Playground/Reentrancy.sol\":584:599  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"2_Playground/Reentrancy.sol\":606:613  _amount */\n      dup3\n        /* \"2_Playground/Reentrancy.sol\":584:618  msg.sender.call{value:_amount}(\"\") */\n      mload(0x40)\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_38\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_37)\n    tag_38:\n      0x60\n      swap2\n      pop\n    tag_37:\n      pop\n        /* \"2_Playground/Reentrancy.sol\":567:618  (bool result,) = msg.sender.call{value:_amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"2_Playground/Reentrancy.sol\":694:701  _amount */\n      dup2\n        /* \"2_Playground/Reentrancy.sol\":670:678  balances */\n      0x00\n        /* \"2_Playground/Reentrancy.sol\":670:690  balances[msg.sender] */\n      dup1\n        /* \"2_Playground/Reentrancy.sol\":679:689  msg.sender */\n      caller\n        /* \"2_Playground/Reentrancy.sol\":670:690  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"2_Playground/Reentrancy.sol\":670:701  balances[msg.sender] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"2_Playground/Reentrancy.sol\":523:708  if(balances[msg.sender] >= _amount) {... */\n      pop\n    tag_33:\n        /* \"2_Playground/Reentrancy.sol\":478:712  function withdraw(uint _amount) public {... */\n      pop\n      jump\t// out\n        /* \"2_Playground/Reentrancy.sol\":374:474  function balanceOf(address _who) public view returns (uint balance) {... */\n    tag_27:\n        /* \"2_Playground/Reentrancy.sol\":428:440  uint balance */\n      0x00\n        /* \"2_Playground/Reentrancy.sol\":455:463  balances */\n      dup1\n        /* \"2_Playground/Reentrancy.sol\":455:469  balances[_who] */\n      0x00\n        /* \"2_Playground/Reentrancy.sol\":464:468  _who */\n      dup4\n        /* \"2_Playground/Reentrancy.sol\":455:469  balances[_who] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"2_Playground/Reentrancy.sol\":448:469  return balances[_who] */\n      swap1\n      pop\n        /* \"2_Playground/Reentrancy.sol\":374:474  function balanceOf(address _who) public view returns (uint balance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_47:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_49\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_51:\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_53\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:559   */\n    tag_11:\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:375   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":418:419   */\n      dup1\n        /* \"#utility.yul\":411:423   */\n      revert\n        /* \"#utility.yul\":373:375   */\n    tag_56:\n        /* \"#utility.yul\":464:465   */\n      0x00\n        /* \"#utility.yul\":489:542   */\n      tag_57\n        /* \"#utility.yul\":534:541   */\n      dup5\n        /* \"#utility.yul\":525:531   */\n      dup3\n        /* \"#utility.yul\":514:523   */\n      dup6\n        /* \"#utility.yul\":510:532   */\n      add\n        /* \"#utility.yul\":489:542   */\n      tag_47\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":479:542   */\n      swap2\n      pop\n        /* \"#utility.yul\":435:552   */\n      pop\n        /* \"#utility.yul\":363:559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:827   */\n    tag_22:\n      0x00\n        /* \"#utility.yul\":673:675   */\n      0x20\n        /* \"#utility.yul\":661:670   */\n      dup3\n        /* \"#utility.yul\":652:659   */\n      dup5\n        /* \"#utility.yul\":648:671   */\n      sub\n        /* \"#utility.yul\":644:676   */\n      slt\n        /* \"#utility.yul\":641:643   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":686:687   */\n      dup1\n        /* \"#utility.yul\":679:691   */\n      revert\n        /* \"#utility.yul\":641:643   */\n    tag_59:\n        /* \"#utility.yul\":732:733   */\n      0x00\n        /* \"#utility.yul\":757:810   */\n      tag_60\n        /* \"#utility.yul\":802:809   */\n      dup5\n        /* \"#utility.yul\":793:799   */\n      dup3\n        /* \"#utility.yul\":782:791   */\n      dup6\n        /* \"#utility.yul\":778:800   */\n      add\n        /* \"#utility.yul\":757:810   */\n      tag_51\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":747:810   */\n      swap2\n      pop\n        /* \"#utility.yul\":703:820   */\n      pop\n        /* \"#utility.yul\":631:827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":833:1130   */\n    tag_61:\n      0x00\n        /* \"#utility.yul\":1013:1096   */\n      tag_63\n        /* \"#utility.yul\":1094:1095   */\n      0x00\n        /* \"#utility.yul\":1089:1092   */\n      dup4\n        /* \"#utility.yul\":1013:1096   */\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1006:1096   */\n      swap2\n      pop\n        /* \"#utility.yul\":1122:1123   */\n      0x00\n        /* \"#utility.yul\":1117:1120   */\n      dup3\n        /* \"#utility.yul\":1113:1124   */\n      add\n        /* \"#utility.yul\":1106:1124   */\n      swap1\n      pop\n        /* \"#utility.yul\":996:1130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1136:1254   */\n    tag_65:\n        /* \"#utility.yul\":1223:1247   */\n      tag_67\n        /* \"#utility.yul\":1241:1246   */\n      dup2\n        /* \"#utility.yul\":1223:1247   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1218:1221   */\n      dup3\n        /* \"#utility.yul\":1211:1248   */\n      mstore\n        /* \"#utility.yul\":1201:1254   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1260:1639   */\n    tag_35:\n      0x00\n        /* \"#utility.yul\":1466:1613   */\n      tag_70\n        /* \"#utility.yul\":1609:1612   */\n      dup3\n        /* \"#utility.yul\":1466:1613   */\n      tag_61\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1459:1613   */\n      swap2\n      pop\n        /* \"#utility.yul\":1630:1633   */\n      dup2\n        /* \"#utility.yul\":1623:1633   */\n      swap1\n      pop\n        /* \"#utility.yul\":1448:1639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1645:1867   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":1776:1778   */\n      0x20\n        /* \"#utility.yul\":1765:1774   */\n      dup3\n        /* \"#utility.yul\":1761:1779   */\n      add\n        /* \"#utility.yul\":1753:1779   */\n      swap1\n      pop\n        /* \"#utility.yul\":1789:1860   */\n      tag_72\n        /* \"#utility.yul\":1857:1858   */\n      0x00\n        /* \"#utility.yul\":1846:1855   */\n      dup4\n        /* \"#utility.yul\":1842:1859   */\n      add\n        /* \"#utility.yul\":1833:1839   */\n      dup5\n        /* \"#utility.yul\":1789:1860   */\n      tag_65\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1743:1867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1873:2020   */\n    tag_64:\n      0x00\n        /* \"#utility.yul\":2011:2014   */\n      dup2\n        /* \"#utility.yul\":1996:2014   */\n      swap1\n      pop\n        /* \"#utility.yul\":1986:2020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2026:2331   */\n    tag_45:\n      0x00\n        /* \"#utility.yul\":2085:2105   */\n      tag_75\n        /* \"#utility.yul\":2103:2104   */\n      dup3\n        /* \"#utility.yul\":2085:2105   */\n      tag_68\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2080:2105   */\n      swap2\n      pop\n        /* \"#utility.yul\":2119:2139   */\n      tag_76\n        /* \"#utility.yul\":2137:2138   */\n      dup4\n        /* \"#utility.yul\":2119:2139   */\n      tag_68\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2114:2139   */\n      swap3\n      pop\n        /* \"#utility.yul\":2273:2274   */\n      dup3\n        /* \"#utility.yul\":2205:2271   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2201:2275   */\n      sub\n        /* \"#utility.yul\":2198:2199   */\n      dup3\n        /* \"#utility.yul\":2195:2276   */\n      gt\n        /* \"#utility.yul\":2192:2194   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":2279:2297   */\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2192:2194   */\n    tag_77:\n        /* \"#utility.yul\":2323:2324   */\n      dup3\n        /* \"#utility.yul\":2320:2321   */\n      dup3\n        /* \"#utility.yul\":2316:2325   */\n      add\n        /* \"#utility.yul\":2309:2325   */\n      swap1\n      pop\n        /* \"#utility.yul\":2070:2331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2337:2528   */\n    tag_41:\n      0x00\n        /* \"#utility.yul\":2397:2417   */\n      tag_81\n        /* \"#utility.yul\":2415:2416   */\n      dup3\n        /* \"#utility.yul\":2397:2417   */\n      tag_68\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2392:2417   */\n      swap2\n      pop\n        /* \"#utility.yul\":2431:2451   */\n      tag_82\n        /* \"#utility.yul\":2449:2450   */\n      dup4\n        /* \"#utility.yul\":2431:2451   */\n      tag_68\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2426:2451   */\n      swap3\n      pop\n        /* \"#utility.yul\":2470:2471   */\n      dup3\n        /* \"#utility.yul\":2467:2468   */\n      dup3\n        /* \"#utility.yul\":2464:2472   */\n      lt\n        /* \"#utility.yul\":2461:2463   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":2475:2493   */\n      tag_84\n      tag_79\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2461:2463   */\n    tag_83:\n        /* \"#utility.yul\":2520:2521   */\n      dup3\n        /* \"#utility.yul\":2517:2518   */\n      dup3\n        /* \"#utility.yul\":2513:2522   */\n      sub\n        /* \"#utility.yul\":2505:2522   */\n      swap1\n      pop\n        /* \"#utility.yul\":2382:2528   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2534:2630   */\n    tag_85:\n      0x00\n        /* \"#utility.yul\":2600:2624   */\n      tag_87\n        /* \"#utility.yul\":2618:2623   */\n      dup3\n        /* \"#utility.yul\":2600:2624   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2589:2624   */\n      swap1\n      pop\n        /* \"#utility.yul\":2579:2630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2636:2762   */\n    tag_88:\n      0x00\n        /* \"#utility.yul\":2713:2755   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2706:2711   */\n      dup3\n        /* \"#utility.yul\":2702:2756   */\n      and\n        /* \"#utility.yul\":2691:2756   */\n      swap1\n      pop\n        /* \"#utility.yul\":2681:2762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2768:2845   */\n    tag_68:\n      0x00\n        /* \"#utility.yul\":2834:2839   */\n      dup2\n        /* \"#utility.yul\":2823:2839   */\n      swap1\n      pop\n        /* \"#utility.yul\":2813:2845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2851:3031   */\n    tag_79:\n        /* \"#utility.yul\":2899:2976   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2896:2897   */\n      0x00\n        /* \"#utility.yul\":2889:2977   */\n      mstore\n        /* \"#utility.yul\":2996:3000   */\n      0x11\n        /* \"#utility.yul\":2993:2994   */\n      0x04\n        /* \"#utility.yul\":2986:3001   */\n      mstore\n        /* \"#utility.yul\":3020:3024   */\n      0x24\n        /* \"#utility.yul\":3017:3018   */\n      0x00\n        /* \"#utility.yul\":3010:3025   */\n      revert\n        /* \"#utility.yul\":3037:3159   */\n    tag_50:\n        /* \"#utility.yul\":3110:3134   */\n      tag_93\n        /* \"#utility.yul\":3128:3133   */\n      dup2\n        /* \"#utility.yul\":3110:3134   */\n      tag_85\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":3103:3108   */\n      dup2\n        /* \"#utility.yul\":3100:3135   */\n      eq\n        /* \"#utility.yul\":3090:3092   */\n      tag_94\n      jumpi\n        /* \"#utility.yul\":3149:3150   */\n      0x00\n        /* \"#utility.yul\":3146:3147   */\n      dup1\n        /* \"#utility.yul\":3139:3151   */\n      revert\n        /* \"#utility.yul\":3090:3092   */\n    tag_94:\n        /* \"#utility.yul\":3080:3159   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3165:3287   */\n    tag_54:\n        /* \"#utility.yul\":3238:3262   */\n      tag_96\n        /* \"#utility.yul\":3256:3261   */\n      dup2\n        /* \"#utility.yul\":3238:3262   */\n      tag_68\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3231:3236   */\n      dup2\n        /* \"#utility.yul\":3228:3263   */\n      eq\n        /* \"#utility.yul\":3218:3220   */\n      tag_97\n      jumpi\n        /* \"#utility.yul\":3277:3278   */\n      0x00\n        /* \"#utility.yul\":3274:3275   */\n      dup1\n        /* \"#utility.yul\":3267:3279   */\n      revert\n        /* \"#utility.yul\":3218:3220   */\n    tag_97:\n        /* \"#utility.yul\":3208:3287   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122035dd01d010ab48db743327772000f0cba14878d302a2961fd9a2f71eeebfcfc564736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061055d806100206000396000f3fe6080604052600436106100425760003560e01c8062362a951461004e57806327e235e31461006a5780632e1a7d4d146100a757806370a08231146100d057610049565b3661004957005b600080fd5b6100686004803603810190610063919061034e565b61010d565b005b34801561007657600080fd5b50610091600480360381019061008c919061034e565b6101a3565b60405161009e91906103de565b60405180910390f35b3480156100b357600080fd5b506100ce60048036038101906100c99190610377565b6101bb565b005b3480156100dc57600080fd5b506100f760048036038101906100f2919061034e565b6102c6565b60405161010491906103de565b60405180910390f35b61015e346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461030e90919063ffffffff16565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106102c35760003373ffffffffffffffffffffffffffffffffffffffff1682604051610226906103c9565b60006040518083038185875af1925050503d8060008114610263576040519150601f19603f3d011682016040523d82523d6000602084013e610268565b606091505b50509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ba919061045a565b92505081905550505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000818361031c9190610404565b905092915050565b600081359050610333816104f9565b92915050565b60008135905061034881610510565b92915050565b60006020828403121561036057600080fd5b600061036e84828501610324565b91505092915050565b60006020828403121561038957600080fd5b600061039784828501610339565b91505092915050565b60006103ad6000836103f9565b9150600082019050919050565b6103c3816104c0565b82525050565b60006103d4826103a0565b9150819050919050565b60006020820190506103f360008301846103ba565b92915050565b600081905092915050565b600061040f826104c0565b915061041a836104c0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561044f5761044e6104ca565b5b828201905092915050565b6000610465826104c0565b9150610470836104c0565b925082821015610483576104826104ca565b5b828203905092915050565b6000610499826104a0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6105028161048e565b811461050d57600080fd5b50565b610519816104c0565b811461052457600080fd5b5056fea264697066735822122035dd01d010ab48db743327772000f0cba14878d302a2961fd9a2f71eeebfcfc564736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x362A95 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xD0 JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH2 0x10D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x377 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E CALLVALUE PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT PUSH2 0x2C3 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x226 SWAP1 PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x404 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x333 DUP2 PUSH2 0x4F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x348 DUP2 PUSH2 0x510 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x36E DUP5 DUP3 DUP6 ADD PUSH2 0x324 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x397 DUP5 DUP3 DUP6 ADD PUSH2 0x339 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AD PUSH1 0x0 DUP4 PUSH2 0x3F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C3 DUP2 PUSH2 0x4C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D4 DUP3 PUSH2 0x3A0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40F DUP3 PUSH2 0x4C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x41A DUP4 PUSH2 0x4C0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x44F JUMPI PUSH2 0x44E PUSH2 0x4CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x465 DUP3 PUSH2 0x4C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x470 DUP4 PUSH2 0x4C0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x483 JUMPI PUSH2 0x482 PUSH2 0x4CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0x4A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x502 DUP2 PUSH2 0x48E JUMP JUMPDEST DUP2 EQ PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x519 DUP2 PUSH2 0x4C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xDD ADD 0xD0 LT 0xAB 0x48 0xDB PUSH21 0x3327772000F0CBA14878D302A2961FD9A2F71EEEBF 0xCF 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "169:578:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3290:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:2",
														"type": ""
													}
												],
												"src": "152:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:196:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:2"
															},
															"nodeType": "YulIf",
															"src": "373:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "435:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "450:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "454:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "479:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "514:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "525:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "510:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "510:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "534:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "489:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "479:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:2",
														"type": ""
													}
												],
												"src": "297:262:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "631:196:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "677:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "686:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "679:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "679:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "679:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "652:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "661:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "648:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "648:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "673:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "644:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "644:32:2"
															},
															"nodeType": "YulIf",
															"src": "641:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "703:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "718:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "732:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "722:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "747:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "782:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "793:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "778:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "778:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "802:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "757:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "757:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "747:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "601:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "612:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "624:6:2",
														"type": ""
													}
												],
												"src": "565:262:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "996:134:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1006:90:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1089:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1013:75:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:83:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1006:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1106:18:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1117:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1122:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1113:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:11:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1106:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "984:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "992:3:2",
														"type": ""
													}
												],
												"src": "833:297:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1201:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1218:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1241:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1223:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1223:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1211:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1211:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1189:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1196:3:2",
														"type": ""
													}
												],
												"src": "1136:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1448:191:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1459:154:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1609:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1466:141:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:147:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1459:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1623:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1630:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1623:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1435:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1444:3:2",
														"type": ""
													}
												],
												"src": "1260:379:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1743:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1753:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1765:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1776:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1761:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1753:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1833:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1846:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1857:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1842:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1789:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1789:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1789:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1715:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1727:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1738:4:2",
														"type": ""
													}
												],
												"src": "1645:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1986:34:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1996:18:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2011:3:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1996:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1958:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1963:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1974:11:2",
														"type": ""
													}
												],
												"src": "1873:147:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2070:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2080:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2103:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2085:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2080:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2114:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2137:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2119:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2119:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2114:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2277:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2279:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2279:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2279:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2198:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2205:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2273:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2201:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2201:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2195:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2195:81:2"
															},
															"nodeType": "YulIf",
															"src": "2192:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2309:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2320:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2323:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2316:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2309:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2057:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2060:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2066:3:2",
														"type": ""
													}
												],
												"src": "2026:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2382:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2392:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2415:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2397:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2392:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2426:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2449:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2431:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2426:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2473:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2475:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2475:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2475:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2467:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2470:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2464:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2464:8:2"
															},
															"nodeType": "YulIf",
															"src": "2461:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2505:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2517:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2520:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2513:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2505:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2368:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2371:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2377:4:2",
														"type": ""
													}
												],
												"src": "2337:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2579:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2589:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2618:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2600:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2600:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2589:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2561:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2571:7:2",
														"type": ""
													}
												],
												"src": "2534:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2681:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2691:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2706:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2713:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2702:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2702:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2691:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2663:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2673:7:2",
														"type": ""
													}
												],
												"src": "2636:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2813:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2823:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2834:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2823:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2795:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2805:7:2",
														"type": ""
													}
												],
												"src": "2768:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2879:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2896:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2899:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2889:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2889:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2889:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2993:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2996:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2986:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2986:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2986:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3017:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3020:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3010:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3010:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3010:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2851:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3080:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3137:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3146:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3149:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3139:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3139:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3139:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3103:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3128:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3110:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3110:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3100:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3100:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3093:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3093:43:2"
															},
															"nodeType": "YulIf",
															"src": "3090:2:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3073:5:2",
														"type": ""
													}
												],
												"src": "3037:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3208:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3265:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3274:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3277:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3267:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3267:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3267:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3231:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3256:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3238:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3238:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3228:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:43:2"
															},
															"nodeType": "YulIf",
															"src": "3218:2:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3201:5:2",
														"type": ""
													}
												],
												"src": "3165:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100425760003560e01c8062362a951461004e57806327e235e31461006a5780632e1a7d4d146100a757806370a08231146100d057610049565b3661004957005b600080fd5b6100686004803603810190610063919061034e565b61010d565b005b34801561007657600080fd5b50610091600480360381019061008c919061034e565b6101a3565b60405161009e91906103de565b60405180910390f35b3480156100b357600080fd5b506100ce60048036038101906100c99190610377565b6101bb565b005b3480156100dc57600080fd5b506100f760048036038101906100f2919061034e565b6102c6565b60405161010491906103de565b60405180910390f35b61015e346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461030e90919063ffffffff16565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106102c35760003373ffffffffffffffffffffffffffffffffffffffff1682604051610226906103c9565b60006040518083038185875af1925050503d8060008114610263576040519150601f19603f3d011682016040523d82523d6000602084013e610268565b606091505b50509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ba919061045a565b92505081905550505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000818361031c9190610404565b905092915050565b600081359050610333816104f9565b92915050565b60008135905061034881610510565b92915050565b60006020828403121561036057600080fd5b600061036e84828501610324565b91505092915050565b60006020828403121561038957600080fd5b600061039784828501610339565b91505092915050565b60006103ad6000836103f9565b9150600082019050919050565b6103c3816104c0565b82525050565b60006103d4826103a0565b9150819050919050565b60006020820190506103f360008301846103ba565b92915050565b600081905092915050565b600061040f826104c0565b915061041a836104c0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561044f5761044e6104ca565b5b828201905092915050565b6000610465826104c0565b9150610470836104c0565b925082821015610483576104826104ca565b5b828203905092915050565b6000610499826104a0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6105028161048e565b811461050d57600080fd5b50565b610519816104c0565b811461052457600080fd5b5056fea264697066735822122035dd01d010ab48db743327772000f0cba14878d302a2961fd9a2f71eeebfcfc564736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x362A95 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xD0 JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH2 0x10D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x377 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E CALLVALUE PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x30E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT PUSH2 0x2C3 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x226 SWAP1 PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x45A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x404 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x333 DUP2 PUSH2 0x4F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x348 DUP2 PUSH2 0x510 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x36E DUP5 DUP3 DUP6 ADD PUSH2 0x324 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x397 DUP5 DUP3 DUP6 ADD PUSH2 0x339 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AD PUSH1 0x0 DUP4 PUSH2 0x3F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C3 DUP2 PUSH2 0x4C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D4 DUP3 PUSH2 0x3A0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40F DUP3 PUSH2 0x4C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x41A DUP4 PUSH2 0x4C0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x44F JUMPI PUSH2 0x44E PUSH2 0x4CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x465 DUP3 PUSH2 0x4C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x470 DUP4 PUSH2 0x4C0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x483 JUMPI PUSH2 0x482 PUSH2 0x4CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0x4A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x502 DUP2 PUSH2 0x48E JUMP JUMPDEST DUP2 EQ PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x519 DUP2 PUSH2 0x4C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xDD ADD 0xD0 LT 0xAB 0x48 0xDB PUSH21 0x3327772000F0CBA14878D302A2961FD9A2F71EEEBF 0xCF 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "169:578:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;271:99;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;226:40;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;478:234;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;374:100;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;271:99;337:28;355:9;337:8;:13;346:3;337:13;;;;;;;;;;;;;;;;:17;;:28;;;;:::i;:::-;321:8;:13;330:3;321:13;;;;;;;;;;;;;;;:44;;;;271:99;:::o;226:40::-;;;;;;;;;;;;;;;;;:::o;478:234::-;550:7;526:8;:20;535:10;526:20;;;;;;;;;;;;;;;;:31;523:185;;568:11;584:10;:15;;606:7;584:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:51;;;694:7;670:8;:20;679:10;670:20;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;523:185;;478:234;:::o;374:100::-;428:12;455:8;:14;464:4;455:14;;;;;;;;;;;;;;;;448:21;;374:100;;;:::o;2755:96:1:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7:139:2:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:262::-;;673:2;661:9;652:7;648:23;644:32;641:2;;;689:1;686;679:12;641:2;732:1;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;703:117;631:196;;;;:::o;833:297::-;;1013:83;1094:1;1089:3;1013:83;:::i;:::-;1006:90;;1122:1;1117:3;1113:11;1106:18;;996:134;;;:::o;1136:118::-;1223:24;1241:5;1223:24;:::i;:::-;1218:3;1211:37;1201:53;;:::o;1260:379::-;;1466:147;1609:3;1466:147;:::i;:::-;1459:154;;1630:3;1623:10;;1448:191;;;:::o;1645:222::-;;1776:2;1765:9;1761:18;1753:26;;1789:71;1857:1;1846:9;1842:17;1833:6;1789:71;:::i;:::-;1743:124;;;;:::o;1873:147::-;;2011:3;1996:18;;1986:34;;;;:::o;2026:305::-;;2085:20;2103:1;2085:20;:::i;:::-;2080:25;;2119:20;2137:1;2119:20;:::i;:::-;2114:25;;2273:1;2205:66;2201:74;2198:1;2195:81;2192:2;;;2279:18;;:::i;:::-;2192:2;2323:1;2320;2316:9;2309:16;;2070:261;;;;:::o;2337:191::-;;2397:20;2415:1;2397:20;:::i;:::-;2392:25;;2431:20;2449:1;2431:20;:::i;:::-;2426:25;;2470:1;2467;2464:8;2461:2;;;2475:18;;:::i;:::-;2461:2;2520:1;2517;2513:9;2505:17;;2382:146;;;;:::o;2534:96::-;;2600:24;2618:5;2600:24;:::i;:::-;2589:35;;2579:51;;;:::o;2636:126::-;;2713:42;2706:5;2702:54;2691:65;;2681:81;;;:::o;2768:77::-;;2834:5;2823:16;;2813:32;;;:::o;2851:180::-;2899:77;2896:1;2889:88;2996:4;2993:1;2986:15;3020:4;3017:1;3010:15;3037:122;3110:24;3128:5;3110:24;:::i;:::-;3103:5;3100:35;3090:2;;3149:1;3146;3139:12;3090:2;3080:79;:::o;3165:122::-;3238:24;3256:5;3238:24;:::i;:::-;3231:5;3228:35;3218:2;;3277:1;3274;3267:12;3218:2;3208:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "274600",
								"executionCost": "312",
								"totalCost": "274912"
							},
							"external": {
								"balanceOf(address)": "1585",
								"balances(address)": "1514",
								"donate(address)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 169,
									"end": 747,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 169,
									"end": 747,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 747,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 169,
									"end": 747,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 169,
									"end": 747,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 169,
									"end": 747,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 169,
									"end": 747,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 747,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 169,
									"end": 747,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 747,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 169,
									"end": 747,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 169,
									"end": 747,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 747,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 169,
									"end": 747,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 169,
									"end": 747,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 747,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 169,
									"end": 747,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 747,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 747,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 169,
									"end": 747,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 747,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122035dd01d010ab48db743327772000f0cba14878d302a2961fd9a2f71eeebfcfc564736f6c63430008000033",
									".code": [
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "362A95"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "27E235E3"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 747,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 271,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 271,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 271,
											"end": 370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 271,
											"end": 370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 271,
											"end": 370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 271,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 271,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 271,
											"end": 370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 271,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 271,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 271,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 337,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 355,
											"end": 364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 337,
											"end": 345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 337,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 337,
											"end": 350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 337,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 337,
											"end": 350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 337,
											"end": 350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 337,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 337,
											"end": 350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 337,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 337,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 350,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 337,
											"end": 350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 337,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 337,
											"end": 354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 365,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 337,
											"end": 365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 337,
											"end": 365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 337,
											"end": 365,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 337,
											"end": 365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 321,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 333,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 321,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 321,
											"end": 334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 321,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 321,
											"end": 334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 321,
											"end": 334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 321,
											"end": 334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 321,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 321,
											"end": 334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 321,
											"end": 334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 321,
											"end": 334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 321,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 321,
											"end": 334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 321,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 334,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 321,
											"end": 365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 321,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 365,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 321,
											"end": 365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 271,
											"end": 370,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 226,
											"end": 266,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 478,
											"end": 712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 550,
											"end": 557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 535,
											"end": 545,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 526,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 526,
											"end": 546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 526,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 526,
											"end": 546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 526,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 526,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 526,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 526,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 526,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 526,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 526,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 526,
											"end": 546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 526,
											"end": 557,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 523,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 523,
											"end": 708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 568,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 594,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 584,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 584,
											"end": 599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 606,
											"end": 613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 584,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 584,
											"end": 618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 670,
											"end": 678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 689,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 670,
											"end": 690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 670,
											"end": 690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 670,
											"end": 690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 670,
											"end": 690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 670,
											"end": 690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 670,
											"end": 690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 670,
											"end": 690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 670,
											"end": 690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 670,
											"end": 690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 670,
											"end": 690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 670,
											"end": 690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 670,
											"end": 690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 670,
											"end": 690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 670,
											"end": 690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 690,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 670,
											"end": 690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 670,
											"end": 701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 670,
											"end": 701,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 670,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 670,
											"end": 701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 670,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 670,
											"end": 701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 670,
											"end": 701,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 670,
											"end": 701,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 670,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 670,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 670,
											"end": 701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 670,
											"end": 701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 670,
											"end": 701,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 670,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 523,
											"end": 708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 523,
											"end": 708,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 523,
											"end": 708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 712,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 374,
											"end": 474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 428,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 468,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 455,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 455,
											"end": 469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 455,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 455,
											"end": 469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 455,
											"end": 469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 455,
											"end": 469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 455,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 455,
											"end": 469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 455,
											"end": 469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 455,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 455,
											"end": 469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 455,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 469,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 455,
											"end": 469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 448,
											"end": 469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 448,
											"end": 469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 474,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 297,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 373,
											"end": 375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 411,
											"end": 423,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 373,
											"end": 375,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 534,
											"end": 541,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 525,
											"end": 531,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 479,
											"end": 542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 479,
											"end": 542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 435,
											"end": 552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 363,
											"end": 559,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 565,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 565,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 565,
											"end": 827,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 670,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 652,
											"end": 659,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 648,
											"end": 671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 644,
											"end": 676,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 641,
											"end": 643,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 641,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 641,
											"end": 643,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 679,
											"end": 691,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 641,
											"end": 643,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 641,
											"end": 643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 809,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 793,
											"end": 799,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 778,
											"end": 800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 757,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 757,
											"end": 810,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 810,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 757,
											"end": 810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 747,
											"end": 810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 703,
											"end": 820,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 631,
											"end": 827,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 631,
											"end": 827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 631,
											"end": 827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 631,
											"end": 827,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 833,
											"end": 1130,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 833,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1013,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1094,
											"end": 1095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1092,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1013,
											"end": 1096,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1013,
											"end": 1096,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1013,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 996,
											"end": 1130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 996,
											"end": 1130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 996,
											"end": 1130,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 996,
											"end": 1130,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1136,
											"end": 1254,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1136,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1221,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1211,
											"end": 1248,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1254,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1260,
											"end": 1639,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1260,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1639,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1609,
											"end": 1612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1466,
											"end": 1613,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1466,
											"end": 1613,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1466,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1613,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1639,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1639,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1639,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1639,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1645,
											"end": 1867,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1645,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1645,
											"end": 1867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1789,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1855,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1859,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1789,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1789,
											"end": 1860,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1789,
											"end": 1860,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1789,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1867,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1867,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1867,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1873,
											"end": 2020,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1873,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1873,
											"end": 2020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 2020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 2020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 2020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 2020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 2020,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2026,
											"end": 2331,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2026,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2026,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2103,
											"end": 2104,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2105,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2137,
											"end": 2138,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2119,
											"end": 2139,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2119,
											"end": 2139,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2119,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2139,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2205,
											"end": 2271,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2201,
											"end": 2275,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2276,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2279,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2279,
											"end": 2297,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2279,
											"end": 2297,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2279,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2320,
											"end": 2321,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2331,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2331,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2331,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2337,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2337,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2415,
											"end": 2416,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2397,
											"end": 2417,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2397,
											"end": 2417,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2397,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2449,
											"end": 2450,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2431,
											"end": 2451,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2431,
											"end": 2451,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2431,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2451,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2468,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2464,
											"end": 2472,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2461,
											"end": 2463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2475,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2475,
											"end": 2493,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2475,
											"end": 2493,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2475,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2461,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2461,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2522,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2505,
											"end": 2522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2505,
											"end": 2522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2528,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2528,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2534,
											"end": 2630,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2534,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2630,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2618,
											"end": 2623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2600,
											"end": 2624,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2600,
											"end": 2624,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2600,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2630,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2630,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2636,
											"end": 2762,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2636,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 2762,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2756,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2762,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2762,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2768,
											"end": 2845,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2768,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2768,
											"end": 2845,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2845,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2845,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2845,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2845,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2851,
											"end": 3031,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2851,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2976,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2896,
											"end": 2897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2977,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3000,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2993,
											"end": 2994,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2986,
											"end": 3001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3024,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3017,
											"end": 3018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3025,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3159,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3037,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3110,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3128,
											"end": 3133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3110,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3110,
											"end": 3134,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3110,
											"end": 3134,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3110,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3100,
											"end": 3135,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3090,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3090,
											"end": 3092,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3150,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3139,
											"end": 3151,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3090,
											"end": 3092,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3090,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3080,
											"end": 3159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3080,
											"end": 3159,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3165,
											"end": 3287,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3165,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3238,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3238,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3238,
											"end": 3262,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3238,
											"end": 3262,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3238,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3263,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3218,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3218,
											"end": 3220,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3277,
											"end": 3278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3279,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3218,
											"end": 3220,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3218,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3208,
											"end": 3287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3208,
											"end": 3287,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"donate(address)": "00362a95",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"2_Playground/Reentrancy.sol\":\"Reentrance\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"2_Playground/Reentrancy.sol\":{\"keccak256\":\"0x71c8f4fc12a1ab651c12b10810bc5ccafbbf55a9937df4e0dcba93f3320a1dba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3cda70afd0ff85d15db32af06eaf4111d0febbc52d877bcf77880575aa3a992\",\"dweb:/ipfs/QmQKu3yxwsWaoAHwEEpPZVkYFsczKcezdpXusSjzq3n74H\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 9,
								"contract": "2_Playground/Reentrancy.sol:Reentrance",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f451d8392b67840e163ec118b2c2c8b07c1a589d337d5ed6f74015c280538ec464736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f451d8392b67840e163ec118b2c2c8b07c1a589d337d5ed6f74015c280538ec464736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL MLOAD 0xD8 CODECOPY 0x2B PUSH8 0x840E163EC118B2C2 0xC8 0xB0 PUSH29 0x1A589D337D5ED6F74015C280538EC464736F6C63430008000033000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f451d8392b67840e163ec118b2c2c8b07c1a589d337d5ed6f74015c280538ec464736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL MLOAD 0xD8 CODECOPY 0x2B PUSH8 0x840E163EC118B2C2 0xC8 0xB0 PUSH29 0x1A589D337D5ED6F74015C280538EC464736F6C63430008000033000000 ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f451d8392b67840e163ec118b2c2c8b07c1a589d337d5ed6f74015c280538ec464736f6c63430008000033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"2_Playground/Reentrancy.sol": {
				"ast": {
					"absolutePath": "2_Playground/Reentrancy.sol",
					"exportedSymbols": {
						"Reentrance": [
							80
						],
						"SafeMath": [
							392
						]
					},
					"id": 81,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 81,
							"sourceUnit": 393,
							"src": "57:110:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 80,
							"linearizedBaseContracts": [
								80
							],
							"name": "Reentrance",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 5,
									"libraryName": {
										"id": 3,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "202:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "196:27:0",
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "215:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 9,
									"mutability": "mutable",
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 80,
									"src": "226:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "234:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "226:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 7,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "245:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "315:55:0",
										"statements": [
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 14,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "321:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 16,
														"indexExpression": {
															"id": 15,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "330:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "321:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 21,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "355:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "355:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 17,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "337:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 19,
																"indexExpression": {
																	"id": 18,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "346:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "337:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 256,
															"src": "337:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "337:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "321:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "321:44:0"
											}
										]
									},
									"functionSelector": "00362a95",
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "287:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:13:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "315:0:0"
									},
									"scope": 80,
									"src": "271:99:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "442:32:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 34,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "455:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 36,
													"indexExpression": {
														"id": 35,
														"name": "_who",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "464:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "455:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 37,
												"nodeType": "Return",
												"src": "448:21:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "_who",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "393:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:14:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "428:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:14:0"
									},
									"scope": 80,
									"src": "374:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "517:195:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 44,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "526:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 47,
														"indexExpression": {
															"expression": {
																"id": 45,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "535:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "535:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "526:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 48,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "550:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "526:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 73,
												"nodeType": "IfStatement",
												"src": "523:185:0",
												"trueBody": {
													"id": 72,
													"nodeType": "Block",
													"src": "559:149:0",
													"statements": [
														{
															"assignments": [
																51,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 51,
																	"mutability": "mutable",
																	"name": "result",
																	"nodeType": "VariableDeclaration",
																	"scope": 72,
																	"src": "568:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 50,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "568:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 59,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 57,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "615:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 52,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "584:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 53,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "584:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 54,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "584:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 55,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 41,
																			"src": "606:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "584:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "584:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "567:51:0"
														},
														{
															"condition": {
																"id": 60,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "629:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 64,
															"nodeType": "IfStatement",
															"src": "626:37:0",
															"trueBody": {
																"id": 63,
																"nodeType": "Block",
																"src": "637:26:0",
																"statements": [
																	{
																		"expression": {
																			"id": 61,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 41,
																			"src": "647:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 62,
																		"nodeType": "ExpressionStatement",
																		"src": "647:7:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 65,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "670:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 68,
																	"indexExpression": {
																		"expression": {
																			"id": 66,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "679:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "679:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "670:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 69,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "694:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "670:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 71,
															"nodeType": "ExpressionStatement",
															"src": "670:31:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "496:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "496:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:14:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:0:0"
									},
									"scope": 80,
									"src": "478:234:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "743:2:0",
										"statements": []
									},
									"id": 79,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "723:2:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "743:0:0"
									},
									"scope": 80,
									"src": "716:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 81,
							"src": "169:578:0"
						}
					],
					"src": "32:715:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 82,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 83,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 113,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															96
														],
														"declarations": [
															{
																"constant": false,
																"id": 96,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 113,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 95,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 100,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 97,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 98,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 101,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 102,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 108,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 106,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 94,
															"id": 107,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 110,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 111,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 94,
														"id": 112,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 90,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 392,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 141,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 127,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 128,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 134,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 132,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 126,
															"id": 133,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 136,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 137,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 120,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 139,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 126,
														"id": 140,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 392,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 183,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 155,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 162,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 154,
															"id": 161,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															164
														],
														"declarations": [
															{
																"constant": false,
																"id": 164,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 183,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 163,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 168,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 165,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 169,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 170,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 172,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 178,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 176,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 154,
															"id": 177,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 180,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 181,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 154,
														"id": 182,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 392,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 211,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 197,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 204,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 202,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 196,
															"id": 203,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 206,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 207,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 190,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 209,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 196,
														"id": 210,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 392,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 239,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 225,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 232,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 230,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 224,
															"id": 231,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 234,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 235,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 237,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 224,
														"id": 238,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 392,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 250,
												"id": 254,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 392,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 266,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 267,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 265,
												"id": 269,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 392,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 281,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 282,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 280,
												"id": 284,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 392,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 297,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 392,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 311,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 312,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 310,
												"id": 314,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 392,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 339,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 329,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 330,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 319,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 332,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 328,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 334,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 335,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 336,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 327,
														"id": 338,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 322,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 392,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 364,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 354,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 357,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 353,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 359,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 360,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 361,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 352,
														"id": 363,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 392,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 389,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 379,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 382,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 378,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 384,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 385,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 386,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 377,
														"id": 388,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 372,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 392,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "482:6300:1"
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			}
		}
	}
}
{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060045534801561003457600080fd5b506000808190555061082d8061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c80638475c028116100715780638475c028146101415780638c74ddb01461015f578063a68ebe8814610169578063b15c128e14610173578063e6f334d71461018f578063f852be69146101ad576100a8565b806281fe1a146100ad57806304ac3f91146100b75780633fa21806146100e75780635ac947cb146101055780635d06228b14610123575b600080fd5b6100b56101cb565b005b6100d160048036038101906100cc91906105cf565b610240565b6040516100de919061063f565b60405180910390f35b6100ef610302565b6040516100fc919061065a565b60405180910390f35b61010d610308565b60405161011a919061065a565b60405180910390f35b61012b61030e565b604051610138919061063f565b60405180910390f35b6101496103e5565b604051610156919061063f565b60405180910390f35b6101676103f8565b005b610171610405565b005b61018d600480360381019061018891906105a6565b61045d565b005b61019761055b565b6040516101a4919061065a565b60405180910390f35b6101b5610561565b6040516101c2919061065a565b60405180910390f35b6001436101d891906106a6565b4060001c6003819055506004546003546101f29190610675565b60028190555060016002541461020957600061020c565b60015b600560006101000a81548160ff02191690831515021790555061023d600560009054906101000a900460ff16610240565b50565b600060014361024f91906106a6565b4060001c600381905550600354600154141561026a57600080fd5b6003546001819055506004546003546102839190610675565b60028190555060016002541461029a57600061029d565b60015b600560006101000a81548160ff021916908315150217905550811515600560009054906101000a900460ff16151514156102f1576000808154809291906102e390610722565b9190505550600190506102fd565b60008081905550600090505b919050565b60015481565b60025481565b600060014361031d91906106a6565b4060001c6003819055506003546001819055506004546003546103409190610675565b60028190555060016002541461035757600061035a565b60015b600560006101000a81548160ff021916908315150217905550600560009054906101000a900460ff16156103b7576103926001610240565b506000600560006101000a81548160ff021916908315150217905550600190506103e2565b6103c16001610240565b506001600560006101000a81548160ff021916908315150217905550600090505b90565b600560009054906101000a900460ff1681565b6104026001610240565b50565b60014361041291906106a6565b4060001c6003819055506003546001819055506004546003546104359190610675565b60028190555060016002541015610456576104506000610240565b5061045b565b600080fd5b565b600081905060014361046f91906106a6565b4060001c6003819055506004546003546104899190610675565b6002819055506001600254146104a05760006104a3565b60015b600560006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff16631d263f67600560009054906101000a900460ff166040518263ffffffff1660e01b8152600401610504919061063f565b602060405180830381600087803b15801561051e57600080fd5b505af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055691906105f8565b505050565b60005481565b60035481565b600081359050610576816107c9565b92915050565b60008135905061058b816107e0565b92915050565b6000815190506105a0816107e0565b92915050565b6000602082840312156105b857600080fd5b60006105c684828501610567565b91505092915050565b6000602082840312156105e157600080fd5b60006105ef8482850161057c565b91505092915050565b60006020828403121561060a57600080fd5b600061061884828501610591565b91505092915050565b61062a816106ec565b82525050565b61063981610718565b82525050565b60006020820190506106546000830184610621565b92915050565b600060208201905061066f6000830184610630565b92915050565b600061068082610718565b915061068b83610718565b92508261069b5761069a61079a565b5b828204905092915050565b60006106b182610718565b91506106bc83610718565b9250828210156106cf576106ce61076b565b5b828203905092915050565b60006106e5826106f8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061072d82610718565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156107605761075f61076b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6107d2816106da565b81146107dd57600080fd5b50565b6107e9816106ec565b81146107f457600080fd5b5056fea26469706673582212202fef686017010533fe37d0fa9d09bef310fe1e141487712faa5d9d93ee6cafb264736f6c63430008000033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x82D DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8475C028 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8475C028 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x8C74DDB0 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA68EBE88 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xB15C128E EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xF852BE69 EQ PUSH2 0x1AD JUMPI PUSH2 0xA8 JUMP JUMPDEST DUP1 PUSH3 0x81FE1A EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x4AC3F91 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x3FA21806 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x5AC947CB EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x5D06228B EQ PUSH2 0x123 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5 PUSH2 0x1CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH2 0x3F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH2 0x405 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 NUMBER PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x209 JUMPI PUSH1 0x0 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x23D PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x240 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x29A JUMPI PUSH1 0x0 PUSH2 0x29D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 ISZERO ISZERO PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2E3 SWAP1 PUSH2 0x722 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x357 JUMPI PUSH1 0x0 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3B7 JUMPI PUSH2 0x392 PUSH1 0x1 PUSH2 0x240 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x3C1 PUSH1 0x1 PUSH2 0x240 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x402 PUSH1 0x1 PUSH2 0x240 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 NUMBER PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x456 JUMPI PUSH2 0x450 PUSH1 0x0 PUSH2 0x240 JUMP JUMPDEST POP PUSH2 0x45B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x1 NUMBER PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x4A0 JUMPI PUSH1 0x0 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x5F8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x576 DUP2 PUSH2 0x7C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x58B DUP2 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5A0 DUP2 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C6 DUP5 DUP3 DUP6 ADD PUSH2 0x567 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5EF DUP5 DUP3 DUP6 ADD PUSH2 0x57C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP5 DUP3 DUP6 ADD PUSH2 0x591 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x62A DUP2 PUSH2 0x6EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x639 DUP2 PUSH2 0x718 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x654 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x621 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x66F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x630 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x680 DUP3 PUSH2 0x718 JUMP JUMPDEST SWAP2 POP PUSH2 0x68B DUP4 PUSH2 0x718 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x69B JUMPI PUSH2 0x69A PUSH2 0x79A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B1 DUP3 PUSH2 0x718 JUMP JUMPDEST SWAP2 POP PUSH2 0x6BC DUP4 PUSH2 0x718 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CE PUSH2 0x76B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E5 DUP3 PUSH2 0x6F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72D DUP3 PUSH2 0x718 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x760 JUMPI PUSH2 0x75F PUSH2 0x76B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x7D2 DUP2 PUSH2 0x6DA JUMP JUMPDEST DUP2 EQ PUSH2 0x7DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7E9 DUP2 PUSH2 0x6EC JUMP JUMPDEST DUP2 EQ PUSH2 0x7F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEF PUSH9 0x6017010533FE37D0FA SWAP14 MULMOD 0xBE RETURN LT INVALID 0x1E EQ EQ DUP8 PUSH18 0x2FAA5D9D93EE6CAFB264736F6C6343000800 STOP CALLER ",
			"sourceMap": "139:2194:0:-:0;;;442:77;425:94;;544:44;;;;;;;;;;582:1;564:15;:19;;;;139:2194;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:3590:1",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "59:87:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "69:29:1",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "91:6:1"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "78:12:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "78:20:1"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "69:5:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "134:5:1"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "107:26:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "107:33:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "107:33:1"
										}
									]
								},
								"name": "abi_decode_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "37:6:1",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "45:3:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "53:5:1",
										"type": ""
									}
								],
								"src": "7:139:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "201:84:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "211:29:1",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "233:6:1"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "220:12:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "220:20:1"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "211:5:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "273:5:1"
													}
												],
												"functionName": {
													"name": "validator_revert_t_bool",
													"nodeType": "YulIdentifier",
													"src": "249:23:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "249:30:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "249:30:1"
										}
									]
								},
								"name": "abi_decode_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "179:6:1",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "187:3:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "195:5:1",
										"type": ""
									}
								],
								"src": "152:133:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "351:77:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "361:22:1",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "376:6:1"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "370:5:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "370:13:1"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "361:5:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "416:5:1"
													}
												],
												"functionName": {
													"name": "validator_revert_t_bool",
													"nodeType": "YulIdentifier",
													"src": "392:23:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "392:30:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "392:30:1"
										}
									]
								},
								"name": "abi_decode_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "329:6:1",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "337:3:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "345:5:1",
										"type": ""
									}
								],
								"src": "291:137:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "500:196:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "546:16:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "555:1:1",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "558:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "548:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "548:12:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "548:12:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "521:7:1"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "530:9:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "517:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "517:23:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "542:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "513:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "513:32:1"
											},
											"nodeType": "YulIf",
											"src": "510:2:1"
										},
										{
											"nodeType": "YulBlock",
											"src": "572:117:1",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "587:15:1",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "601:1:1",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "591:6:1",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "616:63:1",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "651:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "662:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "647:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:22:1"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "671:7:1"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address",
															"nodeType": "YulIdentifier",
															"src": "626:20:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "626:53:1"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "616:6:1"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "470:9:1",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "481:7:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "493:6:1",
										"type": ""
									}
								],
								"src": "434:262:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "765:193:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "811:16:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "820:1:1",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "823:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "813:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "813:12:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "813:12:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "786:7:1"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "795:9:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "782:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "782:23:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "807:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "778:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "778:32:1"
											},
											"nodeType": "YulIf",
											"src": "775:2:1"
										},
										{
											"nodeType": "YulBlock",
											"src": "837:114:1",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "852:15:1",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "866:1:1",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "856:6:1",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "881:60:1",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "913:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "924:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "909:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "909:22:1"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "933:7:1"
															}
														],
														"functionName": {
															"name": "abi_decode_t_bool",
															"nodeType": "YulIdentifier",
															"src": "891:17:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "891:50:1"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "881:6:1"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "735:9:1",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "746:7:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "758:6:1",
										"type": ""
									}
								],
								"src": "702:256:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1038:204:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1084:16:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1093:1:1",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1096:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1086:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "1086:12:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1086:12:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1059:7:1"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1068:9:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1055:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "1055:23:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1080:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "1051:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1051:32:1"
											},
											"nodeType": "YulIf",
											"src": "1048:2:1"
										},
										{
											"nodeType": "YulBlock",
											"src": "1110:125:1",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1125:15:1",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1139:1:1",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1129:6:1",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1154:71:1",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1197:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1208:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1193:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:22:1"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1217:7:1"
															}
														],
														"functionName": {
															"name": "abi_decode_t_bool_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "1164:28:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "1164:61:1"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1154:6:1"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1008:9:1",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "1019:7:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1031:6:1",
										"type": ""
									}
								],
								"src": "964:278:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1307:50:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1324:3:1"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1344:5:1"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "1329:14:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "1329:21:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1317:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1317:34:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1317:34:1"
										}
									]
								},
								"name": "abi_encode_t_bool_to_t_bool_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1295:5:1",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1302:3:1",
										"type": ""
									}
								],
								"src": "1248:109:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1428:53:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1445:3:1"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1468:5:1"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "1450:17:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "1450:24:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1438:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1438:37:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1438:37:1"
										}
									]
								},
								"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1416:5:1",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1423:3:1",
										"type": ""
									}
								],
								"src": "1363:118:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1579:118:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1589:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1601:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1612:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1597:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1597:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1589:4:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1663:6:1"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1676:9:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1687:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1672:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "1672:17:1"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1625:37:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1625:65:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1625:65:1"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1551:9:1",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1563:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1574:4:1",
										"type": ""
									}
								],
								"src": "1487:210:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1801:124:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1811:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1823:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1834:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1819:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1819:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1811:4:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1891:6:1"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1904:9:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1915:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1900:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "1900:17:1"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1847:43:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1847:71:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1847:71:1"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1773:9:1",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1785:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1796:4:1",
										"type": ""
									}
								],
								"src": "1703:222:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1973:143:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1983:25:1",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "2006:1:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1988:17:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1988:20:1"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "1983:1:1"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "2017:25:1",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "2040:1:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2022:17:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2022:20:1"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "2017:1:1"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2064:22:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x12",
																"nodeType": "YulIdentifier",
																"src": "2066:16:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "2066:18:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2066:18:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "2061:1:1"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2054:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2054:9:1"
											},
											"nodeType": "YulIf",
											"src": "2051:2:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2096:14:1",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "2105:1:1"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "2108:1:1"
													}
												],
												"functionName": {
													"name": "div",
													"nodeType": "YulIdentifier",
													"src": "2101:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2101:9:1"
											},
											"variableNames": [
												{
													"name": "r",
													"nodeType": "YulIdentifier",
													"src": "2096:1:1"
												}
											]
										}
									]
								},
								"name": "checked_div_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "1962:1:1",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "1965:1:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "r",
										"nodeType": "YulTypedName",
										"src": "1971:1:1",
										"type": ""
									}
								],
								"src": "1931:185:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2167:146:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2177:25:1",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "2200:1:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2182:17:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2182:20:1"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "2177:1:1"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "2211:25:1",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "2234:1:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2216:17:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2216:20:1"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "2211:1:1"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2258:22:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "2260:16:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "2260:18:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2260:18:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "2252:1:1"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "2255:1:1"
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
													"src": "2249:2:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2249:8:1"
											},
											"nodeType": "YulIf",
											"src": "2246:2:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2290:17:1",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "2302:1:1"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "2305:1:1"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "2298:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2298:9:1"
											},
											"variableNames": [
												{
													"name": "diff",
													"nodeType": "YulIdentifier",
													"src": "2290:4:1"
												}
											]
										}
									]
								},
								"name": "checked_sub_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "2153:1:1",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "2156:1:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "diff",
										"nodeType": "YulTypedName",
										"src": "2162:4:1",
										"type": ""
									}
								],
								"src": "2122:191:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2364:51:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2374:35:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2403:5:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "2385:17:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2385:24:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2374:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2346:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2356:7:1",
										"type": ""
									}
								],
								"src": "2319:96:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2463:48:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2473:32:1",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2498:5:1"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "2491:6:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "2491:13:1"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2484:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2484:21:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2473:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2445:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2455:7:1",
										"type": ""
									}
								],
								"src": "2421:90:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2562:81:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2572:65:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2587:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2594:42:1",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "2583:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2583:54:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2572:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2544:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2554:7:1",
										"type": ""
									}
								],
								"src": "2517:126:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2694:32:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2704:16:1",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "2715:5:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2704:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2676:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2686:7:1",
										"type": ""
									}
								],
								"src": "2649:77:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2775:190:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2785:33:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2812:5:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2794:17:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2794:24:1"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "2785:5:1"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2908:22:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "2910:16:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "2910:18:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2910:18:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2833:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2840:66:1",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "2830:2:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2830:77:1"
											},
											"nodeType": "YulIf",
											"src": "2827:2:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2939:20:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2950:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2957:1:1",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2946:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2946:13:1"
											},
											"variableNames": [
												{
													"name": "ret",
													"nodeType": "YulIdentifier",
													"src": "2939:3:1"
												}
											]
										}
									]
								},
								"name": "increment_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2761:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "ret",
										"nodeType": "YulTypedName",
										"src": "2771:3:1",
										"type": ""
									}
								],
								"src": "2732:233:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2999:152:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3016:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3019:77:1",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3009:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "3009:88:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3009:88:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3113:1:1",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3116:4:1",
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3106:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "3106:15:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3106:15:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3137:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3140:4:1",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "3130:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "3130:15:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3130:15:1"
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
								"src": "2971:180:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3185:152:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3202:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3205:77:1",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3195:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "3195:88:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3195:88:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3299:1:1",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3302:4:1",
														"type": "",
														"value": "0x12"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3292:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "3292:15:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3292:15:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3323:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3326:4:1",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "3316:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "3316:15:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3316:15:1"
										}
									]
								},
								"name": "panic_error_0x12",
								"nodeType": "YulFunctionDefinition",
								"src": "3157:180:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3386:79:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3443:16:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3452:1:1",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3455:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "3445:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "3445:12:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3445:12:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3409:5:1"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3434:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3416:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:24:1"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "3406:2:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "3406:35:1"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "3399:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "3399:43:1"
											},
											"nodeType": "YulIf",
											"src": "3396:2:1"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3379:5:1",
										"type": ""
									}
								],
								"src": "3343:122:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3511:76:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3565:16:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3574:1:1",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3577:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "3567:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "3567:12:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3567:12:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3534:5:1"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3556:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3541:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3541:21:1"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "3531:2:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "3531:32:1"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "3524:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "3524:40:1"
											},
											"nodeType": "YulIf",
											"src": "3521:2:1"
										}
									]
								},
								"name": "validator_revert_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3504:5:1",
										"type": ""
									}
								],
								"src": "3471:116:1"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100a85760003560e01c80638475c028116100715780638475c028146101415780638c74ddb01461015f578063a68ebe8814610169578063b15c128e14610173578063e6f334d71461018f578063f852be69146101ad576100a8565b806281fe1a146100ad57806304ac3f91146100b75780633fa21806146100e75780635ac947cb146101055780635d06228b14610123575b600080fd5b6100b56101cb565b005b6100d160048036038101906100cc91906105cf565b610240565b6040516100de919061063f565b60405180910390f35b6100ef610302565b6040516100fc919061065a565b60405180910390f35b61010d610308565b60405161011a919061065a565b60405180910390f35b61012b61030e565b604051610138919061063f565b60405180910390f35b6101496103e5565b604051610156919061063f565b60405180910390f35b6101676103f8565b005b610171610405565b005b61018d600480360381019061018891906105a6565b61045d565b005b61019761055b565b6040516101a4919061065a565b60405180910390f35b6101b5610561565b6040516101c2919061065a565b60405180910390f35b6001436101d891906106a6565b4060001c6003819055506004546003546101f29190610675565b60028190555060016002541461020957600061020c565b60015b600560006101000a81548160ff02191690831515021790555061023d600560009054906101000a900460ff16610240565b50565b600060014361024f91906106a6565b4060001c600381905550600354600154141561026a57600080fd5b6003546001819055506004546003546102839190610675565b60028190555060016002541461029a57600061029d565b60015b600560006101000a81548160ff021916908315150217905550811515600560009054906101000a900460ff16151514156102f1576000808154809291906102e390610722565b9190505550600190506102fd565b60008081905550600090505b919050565b60015481565b60025481565b600060014361031d91906106a6565b4060001c6003819055506003546001819055506004546003546103409190610675565b60028190555060016002541461035757600061035a565b60015b600560006101000a81548160ff021916908315150217905550600560009054906101000a900460ff16156103b7576103926001610240565b506000600560006101000a81548160ff021916908315150217905550600190506103e2565b6103c16001610240565b506001600560006101000a81548160ff021916908315150217905550600090505b90565b600560009054906101000a900460ff1681565b6104026001610240565b50565b60014361041291906106a6565b4060001c6003819055506003546001819055506004546003546104359190610675565b60028190555060016002541015610456576104506000610240565b5061045b565b600080fd5b565b600081905060014361046f91906106a6565b4060001c6003819055506004546003546104899190610675565b6002819055506001600254146104a05760006104a3565b60015b600560006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff16631d263f67600560009054906101000a900460ff166040518263ffffffff1660e01b8152600401610504919061063f565b602060405180830381600087803b15801561051e57600080fd5b505af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055691906105f8565b505050565b60005481565b60035481565b600081359050610576816107c9565b92915050565b60008135905061058b816107e0565b92915050565b6000815190506105a0816107e0565b92915050565b6000602082840312156105b857600080fd5b60006105c684828501610567565b91505092915050565b6000602082840312156105e157600080fd5b60006105ef8482850161057c565b91505092915050565b60006020828403121561060a57600080fd5b600061061884828501610591565b91505092915050565b61062a816106ec565b82525050565b61063981610718565b82525050565b60006020820190506106546000830184610621565b92915050565b600060208201905061066f6000830184610630565b92915050565b600061068082610718565b915061068b83610718565b92508261069b5761069a61079a565b5b828204905092915050565b60006106b182610718565b91506106bc83610718565b9250828210156106cf576106ce61076b565b5b828203905092915050565b60006106e5826106f8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061072d82610718565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156107605761075f61076b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6107d2816106da565b81146107dd57600080fd5b50565b6107e9816106ec565b81146107f457600080fd5b5056fea26469706673582212202fef686017010533fe37d0fa9d09bef310fe1e141487712faa5d9d93ee6cafb264736f6c63430008000033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8475C028 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8475C028 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x8C74DDB0 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA68EBE88 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xB15C128E EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xF852BE69 EQ PUSH2 0x1AD JUMPI PUSH2 0xA8 JUMP JUMPDEST DUP1 PUSH3 0x81FE1A EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x4AC3F91 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x3FA21806 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x5AC947CB EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x5D06228B EQ PUSH2 0x123 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5 PUSH2 0x1CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH2 0x3F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH2 0x405 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 NUMBER PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x209 JUMPI PUSH1 0x0 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x23D PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x240 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x29A JUMPI PUSH1 0x0 PUSH2 0x29D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 ISZERO ISZERO PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2E3 SWAP1 PUSH2 0x722 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x357 JUMPI PUSH1 0x0 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3B7 JUMPI PUSH2 0x392 PUSH1 0x1 PUSH2 0x240 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x3C1 PUSH1 0x1 PUSH2 0x240 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x402 PUSH1 0x1 PUSH2 0x240 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 NUMBER PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x456 JUMPI PUSH2 0x450 PUSH1 0x0 PUSH2 0x240 JUMP JUMPDEST POP PUSH2 0x45B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x1 NUMBER PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x4A0 JUMPI PUSH1 0x0 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x5F8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x576 DUP2 PUSH2 0x7C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x58B DUP2 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5A0 DUP2 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C6 DUP5 DUP3 DUP6 ADD PUSH2 0x567 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5EF DUP5 DUP3 DUP6 ADD PUSH2 0x57C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP5 DUP3 DUP6 ADD PUSH2 0x591 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x62A DUP2 PUSH2 0x6EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x639 DUP2 PUSH2 0x718 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x654 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x621 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x66F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x630 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x680 DUP3 PUSH2 0x718 JUMP JUMPDEST SWAP2 POP PUSH2 0x68B DUP4 PUSH2 0x718 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x69B JUMPI PUSH2 0x69A PUSH2 0x79A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B1 DUP3 PUSH2 0x718 JUMP JUMPDEST SWAP2 POP PUSH2 0x6BC DUP4 PUSH2 0x718 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CE PUSH2 0x76B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E5 DUP3 PUSH2 0x6F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72D DUP3 PUSH2 0x718 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x760 JUMPI PUSH2 0x75F PUSH2 0x76B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x7D2 DUP2 PUSH2 0x6DA JUMP JUMPDEST DUP2 EQ PUSH2 0x7DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7E9 DUP2 PUSH2 0x6EC JUMP JUMPDEST DUP2 EQ PUSH2 0x7F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEF PUSH9 0x6017010533FE37D0FA SWAP14 MULMOD 0xBE RETURN LT INVALID 0x1E EQ EQ DUP8 PUSH18 0x2FAA5D9D93EE6CAFB264736F6C6343000800 STOP CALLER ",
			"sourceMap": "139:2194:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1282:194;;;:::i;:::-;;863:413;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;196:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;223;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:368;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;523:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1660:57;;;:::i;:::-;;1721:237;;;:::i;:::-;;594:265;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;162:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;327:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1282:194;1369:1;1354:12;:16;;;;:::i;:::-;1344:27;1336:36;;1323:10;:49;;;;1402:6;;1389:10;;:19;;;;:::i;:::-;1378:8;:30;;;;1433:1;1421:8;;:13;:28;;1444:5;1421:28;;;1437:4;1421:28;1414:4;;:35;;;;;;;;;;;;;;;;;;1456:15;1466:4;;;;;;;;;;;1456:9;:15::i;:::-;;1282:194::o;863:413::-;911:4;969:1;954:12;:16;;;;:::i;:::-;944:27;936:36;;923:10;:49;;;;995:10;;983:8;;:22;979:51;;;1015:8;;;979:51;1047:10;;1036:8;:21;;;;1087:6;;1074:10;;:19;;;;:::i;:::-;1063:8;:30;;;;1118:1;1106:8;;:13;:28;;1129:5;1106:28;;;1122:4;1106:28;1099:4;;:35;;;;;;;;;;;;;;;;;;1153:6;1145:14;;:4;;;;;;;;;;;:14;;;1141:131;;;1169:15;;:17;;;;;;;;;:::i;:::-;;;;;;1201:4;1194:11;;;;1141:131;1244:1;1226:15;:19;;;;1260:5;1253:12;;863:413;;;;:::o;196:23::-;;;;:::o;223:::-;;;;:::o;1962:368::-;1999:4;2057:1;2042:12;:16;;;;:::i;:::-;2032:27;2024:36;;2011:10;:49;;;;2078:10;;2067:8;:21;;;;2118:6;;2105:10;;:19;;;;:::i;:::-;2094:8;:30;;;;2149:1;2137:8;;:13;:28;;2160:5;2137:28;;;2153:4;2137:28;2130:4;;:35;;;;;;;;;;;;;;;;;;2176:4;;;;;;;;;;;2172:154;;;2190:15;2200:4;2190:9;:15::i;:::-;;2220:5;2213:4;;:12;;;;;;;;;;;;;;;;;;2240:4;2233:11;;;;2172:154;2265:15;2275:4;2265:9;:15::i;:::-;;2295:4;2288;;:11;;;;;;;;;;;;;;;;;;2314:5;2307:12;;1962:368;;:::o;523:16::-;;;;;;;;;;;;;:::o;1660:57::-;1697:15;1707:4;1697:9;:15::i;:::-;;1660:57::o;1721:237::-;1803:1;1788:12;:16;;;;:::i;:::-;1778:27;1770:36;;1757:10;:49;;;;1824:10;;1813:8;:21;;;;1864:6;;1851:10;;:19;;;;:::i;:::-;1840:8;:30;;;;1891:1;1880:8;;:12;1877:77;;;1902:16;1912:5;1902:9;:16::i;:::-;;1877:77;;;1939:8;;;1877:77;1721:237::o;594:265::-;649:23;692:5;649:49;;750:1;735:12;:16;;;;:::i;:::-;725:27;717:36;;704:10;:49;;;;783:6;;770:10;;:19;;;;:::i;:::-;759:8;:30;;;;814:1;802:8;;:13;:28;;825:5;802:28;;;818:4;802:28;795:4;;:35;;;;;;;;;;;;;;;;;;837:6;:11;;;849:4;;;;;;;;;;;837:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;594:265;;:::o;162:30::-;;;;:::o;327:25::-;;;;:::o;7:139:1:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:137::-;;376:6;370:13;361:22;;392:30;416:5;392:30;:::i;:::-;351:77;;;;:::o;434:262::-;;542:2;530:9;521:7;517:23;513:32;510:2;;;558:1;555;548:12;510:2;601:1;626:53;671:7;662:6;651:9;647:22;626:53;:::i;:::-;616:63;;572:117;500:196;;;;:::o;702:256::-;;807:2;795:9;786:7;782:23;778:32;775:2;;;823:1;820;813:12;775:2;866:1;891:50;933:7;924:6;913:9;909:22;891:50;:::i;:::-;881:60;;837:114;765:193;;;;:::o;964:278::-;;1080:2;1068:9;1059:7;1055:23;1051:32;1048:2;;;1096:1;1093;1086:12;1048:2;1139:1;1164:61;1217:7;1208:6;1197:9;1193:22;1164:61;:::i;:::-;1154:71;;1110:125;1038:204;;;;:::o;1248:109::-;1329:21;1344:5;1329:21;:::i;:::-;1324:3;1317:34;1307:50;;:::o;1363:118::-;1450:24;1468:5;1450:24;:::i;:::-;1445:3;1438:37;1428:53;;:::o;1487:210::-;;1612:2;1601:9;1597:18;1589:26;;1625:65;1687:1;1676:9;1672:17;1663:6;1625:65;:::i;:::-;1579:118;;;;:::o;1703:222::-;;1834:2;1823:9;1819:18;1811:26;;1847:71;1915:1;1904:9;1900:17;1891:6;1847:71;:::i;:::-;1801:124;;;;:::o;1931:185::-;;1988:20;2006:1;1988:20;:::i;:::-;1983:25;;2022:20;2040:1;2022:20;:::i;:::-;2017:25;;2061:1;2051:2;;2066:18;;:::i;:::-;2051:2;2108:1;2105;2101:9;2096:14;;1973:143;;;;:::o;2122:191::-;;2182:20;2200:1;2182:20;:::i;:::-;2177:25;;2216:20;2234:1;2216:20;:::i;:::-;2211:25;;2255:1;2252;2249:8;2246:2;;;2260:18;;:::i;:::-;2246:2;2305:1;2302;2298:9;2290:17;;2167:146;;;;:::o;2319:96::-;;2385:24;2403:5;2385:24;:::i;:::-;2374:35;;2364:51;;;:::o;2421:90::-;;2498:5;2491:13;2484:21;2473:32;;2463:48;;;:::o;2517:126::-;;2594:42;2587:5;2583:54;2572:65;;2562:81;;;:::o;2649:77::-;;2715:5;2704:16;;2694:32;;;:::o;2732:233::-;;2794:24;2812:5;2794:24;:::i;:::-;2785:33;;2840:66;2833:5;2830:77;2827:2;;;2910:18;;:::i;:::-;2827:2;2957:1;2950:5;2946:13;2939:20;;2775:190;;;:::o;2971:180::-;3019:77;3016:1;3009:88;3116:4;3113:1;3106:15;3140:4;3137:1;3130:15;3157:180;3205:77;3202:1;3195:88;3302:4;3299:1;3292:15;3326:4;3323:1;3316:15;3343:122;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:2;;3455:1;3452;3445:12;3396:2;3386:79;:::o;3471:116::-;3541:21;3556:5;3541:21;:::i;:::-;3534:5;3531:32;3521:2;;3577:1;3574;3567:12;3521:2;3511:76;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "418600",
				"executionCost": "25475",
				"totalCost": "444075"
			},
			"external": {
				"blankFlip()": "infinite",
				"blockValue()": "1239",
				"coinFlip()": "1196",
				"consecutiveWins()": "1217",
				"lastHash()": "1174",
				"localFlip(bool)": "infinite",
				"localPsychicFlip()": "infinite",
				"positiveFlip()": "infinite",
				"remotePsychicFlip(address)": "infinite",
				"setCoinFlip()": "infinite",
				"side()": "1171"
			}
		},
		"methodIdentifiers": {
			"blankFlip()": "5d06228b",
			"blockValue()": "f852be69",
			"coinFlip()": "5ac947cb",
			"consecutiveWins()": "e6f334d7",
			"lastHash()": "3fa21806",
			"localFlip(bool)": "04ac3f91",
			"localPsychicFlip()": "0081fe1a",
			"positiveFlip()": "8c74ddb0",
			"remotePsychicFlip(address)": "b15c128e",
			"setCoinFlip()": "a68ebe88",
			"side()": "8475c028"
		}
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [],
			"name": "blankFlip",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "blockValue",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "coinFlip",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "consecutiveWins",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "lastHash",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bool",
					"name": "_guess",
					"type": "bool"
				}
			],
			"name": "localFlip",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "localPsychicFlip",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "positiveFlip",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_addr",
					"type": "address"
				}
			],
			"name": "remotePsychicFlip",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "setCoinFlip",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "side",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}
{
	"id": "deb51d259a8ffa6b9074d35f375ea723",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Coinflip.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface DeployedCoinFlip {\n  function flip(bool _g1) external returns(bool);\n}\n\ncontract CoinFlip {\n\n  uint256 public consecutiveWins;\n  uint256 public lastHash;\n  uint256 public coinFlip; // solidity does not know floats, so it will round 1.111 to 1. and 0.9 to 0.\n  uint256 public blockValue; //define blockValue outside of the function to be able to read it...\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n  bool public side;\n\n  constructor() {\n    consecutiveWins = 0;\n  }\n  \n  function remotePsychicFlip(address _addr) public {\n    DeployedCoinFlip myFlip = DeployedCoinFlip(_addr);\n    blockValue = uint256(blockhash(block.number - 1));\n    coinFlip = blockValue / FACTOR;\n    side = coinFlip == 1 ? true : false;\n\n    myFlip.flip(side);\n  }\n\n  function localFlip(bool _guess) public returns (bool) {\n    blockValue = uint256(blockhash(block.number - 1));\n\n    if (lastHash == blockValue) {\n      revert();\n    }\n\n    lastHash = blockValue;\n    coinFlip = blockValue / FACTOR;\n    side = coinFlip == 1 ? true : false;\n\n    if (side == _guess) {\n      consecutiveWins++;\n      return true;\n    } else {\n      consecutiveWins = 0;\n      return false;\n    }\n  }\n  \n  function localPsychicFlip() public {\n    blockValue = uint256(blockhash(block.number - 1));\n    coinFlip = blockValue / FACTOR;\n    side = coinFlip == 1 ? true : false;\n\n    localFlip(side);\n  }\n\n  // create a function that calls the deployed CoinFlip instance and flips for us, along with the guessed estimate\n\n  // blank flip function, simply returns the value of the flip.\n  function positiveFlip() public {\n    localFlip(true);\n  }\n\n  function setCoinFlip() public {\n    blockValue = uint256(blockhash(block.number - 1));\n\n    lastHash = blockValue;\n    coinFlip = blockValue / FACTOR;\n\n    if(coinFlip < 1) {\n      localFlip(false);\n    } else {\n      revert();\n    }\n  }\n\n  function blankFlip() public returns (bool) {\n    blockValue = uint256(blockhash(block.number - 1));\n\n    lastHash = blockValue;\n    coinFlip = blockValue / FACTOR;\n    side = coinFlip == 1 ? true : false;\n\n    if (side) {\n      localFlip(true);\n      side = false;\n      return true;\n    } else {\n      localFlip(true);\n      side = true;\n      return false;\n    }\n  }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Coinflip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "blankFlip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "blockValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "coinFlip",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastHash",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "localFlip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "localPsychicFlip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "positiveFlip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "remotePsychicFlip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setCoinFlip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "side",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Coinflip.sol\":139:2333  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"Coinflip.sol\":442:519  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"Coinflip.sol\":425:519  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x04\n  sstore\n    /* \"Coinflip.sol\":544:588  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Coinflip.sol\":582:583  0 */\n  0x00\n    /* \"Coinflip.sol\":564:579  consecutiveWins */\n  dup1\n    /* \"Coinflip.sol\":564:583  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Coinflip.sol\":139:2333  contract CoinFlip {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Coinflip.sol\":139:2333  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8475c028\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8475c028\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8c74ddb0\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa68ebe88\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb15c128e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf852be69\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x81fe1a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x04ac3f91\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3fa21806\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5ac947cb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5d06228b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Coinflip.sol\":1282:1476  function localPsychicFlip() public {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Coinflip.sol\":863:1276  function localFlip(bool _guess) public returns (bool) {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Coinflip.sol\":196:219  uint256 public lastHash */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Coinflip.sol\":223:246  uint256 public coinFlip */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Coinflip.sol\":1962:2330  function blankFlip() public returns (bool) {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Coinflip.sol\":523:539  bool public side */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Coinflip.sol\":1660:1717  function positiveFlip() public {... */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"Coinflip.sol\":1721:1958  function setCoinFlip() public {... */\n    tag_10:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      stop\n        /* \"Coinflip.sol\":594:859  function remotePsychicFlip(address _addr) public {... */\n    tag_11:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"Coinflip.sol\":162:192  uint256 public consecutiveWins */\n    tag_12:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Coinflip.sol\":327:352  uint256 public blockValue */\n    tag_13:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Coinflip.sol\":1282:1476  function localPsychicFlip() public {... */\n    tag_16:\n        /* \"Coinflip.sol\":1369:1370  1 */\n      0x01\n        /* \"Coinflip.sol\":1354:1366  block.number */\n      number\n        /* \"Coinflip.sol\":1354:1370  block.number - 1 */\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"Coinflip.sol\":1344:1371  blockhash(block.number - 1) */\n      blockhash\n        /* \"Coinflip.sol\":1336:1372  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"Coinflip.sol\":1323:1333  blockValue */\n      0x03\n        /* \"Coinflip.sol\":1323:1372  blockValue = uint256(blockhash(block.number - 1)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":1402:1408  FACTOR */\n      sload(0x04)\n        /* \"Coinflip.sol\":1389:1399  blockValue */\n      sload(0x03)\n        /* \"Coinflip.sol\":1389:1408  blockValue / FACTOR */\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"Coinflip.sol\":1378:1386  coinFlip */\n      0x02\n        /* \"Coinflip.sol\":1378:1408  coinFlip = blockValue / FACTOR */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":1433:1434  1 */\n      0x01\n        /* \"Coinflip.sol\":1421:1429  coinFlip */\n      sload(0x02)\n        /* \"Coinflip.sol\":1421:1434  coinFlip == 1 */\n      eq\n        /* \"Coinflip.sol\":1421:1449  coinFlip == 1 ? true : false */\n      tag_55\n      jumpi\n        /* \"Coinflip.sol\":1444:1449  false */\n      0x00\n        /* \"Coinflip.sol\":1421:1449  coinFlip == 1 ? true : false */\n      jump(tag_56)\n    tag_55:\n        /* \"Coinflip.sol\":1437:1441  true */\n      0x01\n        /* \"Coinflip.sol\":1421:1449  coinFlip == 1 ? true : false */\n    tag_56:\n        /* \"Coinflip.sol\":1414:1418  side */\n      0x05\n      0x00\n        /* \"Coinflip.sol\":1414:1449  side = coinFlip == 1 ? true : false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":1456:1471  localFlip(side) */\n      tag_57\n        /* \"Coinflip.sol\":1466:1470  side */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Coinflip.sol\":1456:1465  localFlip */\n      tag_20\n        /* \"Coinflip.sol\":1456:1471  localFlip(side) */\n      jump\t// in\n    tag_57:\n      pop\n        /* \"Coinflip.sol\":1282:1476  function localPsychicFlip() public {... */\n      jump\t// out\n        /* \"Coinflip.sol\":863:1276  function localFlip(bool _guess) public returns (bool) {... */\n    tag_20:\n        /* \"Coinflip.sol\":911:915  bool */\n      0x00\n        /* \"Coinflip.sol\":969:970  1 */\n      0x01\n        /* \"Coinflip.sol\":954:966  block.number */\n      number\n        /* \"Coinflip.sol\":954:970  block.number - 1 */\n      tag_59\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_59:\n        /* \"Coinflip.sol\":944:971  blockhash(block.number - 1) */\n      blockhash\n        /* \"Coinflip.sol\":936:972  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"Coinflip.sol\":923:933  blockValue */\n      0x03\n        /* \"Coinflip.sol\":923:972  blockValue = uint256(blockhash(block.number - 1)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":995:1005  blockValue */\n      sload(0x03)\n        /* \"Coinflip.sol\":983:991  lastHash */\n      sload(0x01)\n        /* \"Coinflip.sol\":983:1005  lastHash == blockValue */\n      eq\n        /* \"Coinflip.sol\":979:1030  if (lastHash == blockValue) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \"Coinflip.sol\":1015:1023  revert() */\n      0x00\n      dup1\n      revert\n        /* \"Coinflip.sol\":979:1030  if (lastHash == blockValue) {... */\n    tag_60:\n        /* \"Coinflip.sol\":1047:1057  blockValue */\n      sload(0x03)\n        /* \"Coinflip.sol\":1036:1044  lastHash */\n      0x01\n        /* \"Coinflip.sol\":1036:1057  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":1087:1093  FACTOR */\n      sload(0x04)\n        /* \"Coinflip.sol\":1074:1084  blockValue */\n      sload(0x03)\n        /* \"Coinflip.sol\":1074:1093  blockValue / FACTOR */\n      tag_61\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_61:\n        /* \"Coinflip.sol\":1063:1071  coinFlip */\n      0x02\n        /* \"Coinflip.sol\":1063:1093  coinFlip = blockValue / FACTOR */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":1118:1119  1 */\n      0x01\n        /* \"Coinflip.sol\":1106:1114  coinFlip */\n      sload(0x02)\n        /* \"Coinflip.sol\":1106:1119  coinFlip == 1 */\n      eq\n        /* \"Coinflip.sol\":1106:1134  coinFlip == 1 ? true : false */\n      tag_62\n      jumpi\n        /* \"Coinflip.sol\":1129:1134  false */\n      0x00\n        /* \"Coinflip.sol\":1106:1134  coinFlip == 1 ? true : false */\n      jump(tag_63)\n    tag_62:\n        /* \"Coinflip.sol\":1122:1126  true */\n      0x01\n        /* \"Coinflip.sol\":1106:1134  coinFlip == 1 ? true : false */\n    tag_63:\n        /* \"Coinflip.sol\":1099:1103  side */\n      0x05\n      0x00\n        /* \"Coinflip.sol\":1099:1134  side = coinFlip == 1 ? true : false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":1153:1159  _guess */\n      dup2\n        /* \"Coinflip.sol\":1145:1159  side == _guess */\n      iszero\n      iszero\n        /* \"Coinflip.sol\":1145:1149  side */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Coinflip.sol\":1145:1159  side == _guess */\n      iszero\n      iszero\n      eq\n        /* \"Coinflip.sol\":1141:1272  if (side == _guess) {... */\n      iszero\n      tag_64\n      jumpi\n        /* \"Coinflip.sol\":1169:1184  consecutiveWins */\n      0x00\n      dup1\n        /* \"Coinflip.sol\":1169:1186  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Coinflip.sol\":1201:1205  true */\n      0x01\n        /* \"Coinflip.sol\":1194:1205  return true */\n      swap1\n      pop\n      jump(tag_58)\n        /* \"Coinflip.sol\":1141:1272  if (side == _guess) {... */\n    tag_64:\n        /* \"Coinflip.sol\":1244:1245  0 */\n      0x00\n        /* \"Coinflip.sol\":1226:1241  consecutiveWins */\n      dup1\n        /* \"Coinflip.sol\":1226:1245  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":1260:1265  false */\n      0x00\n        /* \"Coinflip.sol\":1253:1265  return false */\n      swap1\n      pop\n        /* \"Coinflip.sol\":863:1276  function localFlip(bool _guess) public returns (bool) {... */\n    tag_58:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Coinflip.sol\":196:219  uint256 public lastHash */\n    tag_24:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"Coinflip.sol\":223:246  uint256 public coinFlip */\n    tag_28:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"Coinflip.sol\":1962:2330  function blankFlip() public returns (bool) {... */\n    tag_31:\n        /* \"Coinflip.sol\":1999:2003  bool */\n      0x00\n        /* \"Coinflip.sol\":2057:2058  1 */\n      0x01\n        /* \"Coinflip.sol\":2042:2054  block.number */\n      number\n        /* \"Coinflip.sol\":2042:2058  block.number - 1 */\n      tag_69\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_69:\n        /* \"Coinflip.sol\":2032:2059  blockhash(block.number - 1) */\n      blockhash\n        /* \"Coinflip.sol\":2024:2060  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"Coinflip.sol\":2011:2021  blockValue */\n      0x03\n        /* \"Coinflip.sol\":2011:2060  blockValue = uint256(blockhash(block.number - 1)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":2078:2088  blockValue */\n      sload(0x03)\n        /* \"Coinflip.sol\":2067:2075  lastHash */\n      0x01\n        /* \"Coinflip.sol\":2067:2088  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":2118:2124  FACTOR */\n      sload(0x04)\n        /* \"Coinflip.sol\":2105:2115  blockValue */\n      sload(0x03)\n        /* \"Coinflip.sol\":2105:2124  blockValue / FACTOR */\n      tag_70\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_70:\n        /* \"Coinflip.sol\":2094:2102  coinFlip */\n      0x02\n        /* \"Coinflip.sol\":2094:2124  coinFlip = blockValue / FACTOR */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":2149:2150  1 */\n      0x01\n        /* \"Coinflip.sol\":2137:2145  coinFlip */\n      sload(0x02)\n        /* \"Coinflip.sol\":2137:2150  coinFlip == 1 */\n      eq\n        /* \"Coinflip.sol\":2137:2165  coinFlip == 1 ? true : false */\n      tag_71\n      jumpi\n        /* \"Coinflip.sol\":2160:2165  false */\n      0x00\n        /* \"Coinflip.sol\":2137:2165  coinFlip == 1 ? true : false */\n      jump(tag_72)\n    tag_71:\n        /* \"Coinflip.sol\":2153:2157  true */\n      0x01\n        /* \"Coinflip.sol\":2137:2165  coinFlip == 1 ? true : false */\n    tag_72:\n        /* \"Coinflip.sol\":2130:2134  side */\n      0x05\n      0x00\n        /* \"Coinflip.sol\":2130:2165  side = coinFlip == 1 ? true : false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":2176:2180  side */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Coinflip.sol\":2172:2326  if (side) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"Coinflip.sol\":2190:2205  localFlip(true) */\n      tag_74\n        /* \"Coinflip.sol\":2200:2204  true */\n      0x01\n        /* \"Coinflip.sol\":2190:2199  localFlip */\n      tag_20\n        /* \"Coinflip.sol\":2190:2205  localFlip(true) */\n      jump\t// in\n    tag_74:\n      pop\n        /* \"Coinflip.sol\":2220:2225  false */\n      0x00\n        /* \"Coinflip.sol\":2213:2217  side */\n      0x05\n      0x00\n        /* \"Coinflip.sol\":2213:2225  side = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":2240:2244  true */\n      0x01\n        /* \"Coinflip.sol\":2233:2244  return true */\n      swap1\n      pop\n      jump(tag_68)\n        /* \"Coinflip.sol\":2172:2326  if (side) {... */\n    tag_73:\n        /* \"Coinflip.sol\":2265:2280  localFlip(true) */\n      tag_76\n        /* \"Coinflip.sol\":2275:2279  true */\n      0x01\n        /* \"Coinflip.sol\":2265:2274  localFlip */\n      tag_20\n        /* \"Coinflip.sol\":2265:2280  localFlip(true) */\n      jump\t// in\n    tag_76:\n      pop\n        /* \"Coinflip.sol\":2295:2299  true */\n      0x01\n        /* \"Coinflip.sol\":2288:2292  side */\n      0x05\n      0x00\n        /* \"Coinflip.sol\":2288:2299  side = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":2314:2319  false */\n      0x00\n        /* \"Coinflip.sol\":2307:2319  return false */\n      swap1\n      pop\n        /* \"Coinflip.sol\":1962:2330  function blankFlip() public returns (bool) {... */\n    tag_68:\n      swap1\n      jump\t// out\n        /* \"Coinflip.sol\":523:539  bool public side */\n    tag_34:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Coinflip.sol\":1660:1717  function positiveFlip() public {... */\n    tag_37:\n        /* \"Coinflip.sol\":1697:1712  localFlip(true) */\n      tag_78\n        /* \"Coinflip.sol\":1707:1711  true */\n      0x01\n        /* \"Coinflip.sol\":1697:1706  localFlip */\n      tag_20\n        /* \"Coinflip.sol\":1697:1712  localFlip(true) */\n      jump\t// in\n    tag_78:\n      pop\n        /* \"Coinflip.sol\":1660:1717  function positiveFlip() public {... */\n      jump\t// out\n        /* \"Coinflip.sol\":1721:1958  function setCoinFlip() public {... */\n    tag_39:\n        /* \"Coinflip.sol\":1803:1804  1 */\n      0x01\n        /* \"Coinflip.sol\":1788:1800  block.number */\n      number\n        /* \"Coinflip.sol\":1788:1804  block.number - 1 */\n      tag_80\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_80:\n        /* \"Coinflip.sol\":1778:1805  blockhash(block.number - 1) */\n      blockhash\n        /* \"Coinflip.sol\":1770:1806  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"Coinflip.sol\":1757:1767  blockValue */\n      0x03\n        /* \"Coinflip.sol\":1757:1806  blockValue = uint256(blockhash(block.number - 1)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":1824:1834  blockValue */\n      sload(0x03)\n        /* \"Coinflip.sol\":1813:1821  lastHash */\n      0x01\n        /* \"Coinflip.sol\":1813:1834  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":1864:1870  FACTOR */\n      sload(0x04)\n        /* \"Coinflip.sol\":1851:1861  blockValue */\n      sload(0x03)\n        /* \"Coinflip.sol\":1851:1870  blockValue / FACTOR */\n      tag_81\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_81:\n        /* \"Coinflip.sol\":1840:1848  coinFlip */\n      0x02\n        /* \"Coinflip.sol\":1840:1870  coinFlip = blockValue / FACTOR */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":1891:1892  1 */\n      0x01\n        /* \"Coinflip.sol\":1880:1888  coinFlip */\n      sload(0x02)\n        /* \"Coinflip.sol\":1880:1892  coinFlip < 1 */\n      lt\n        /* \"Coinflip.sol\":1877:1954  if(coinFlip < 1) {... */\n      iszero\n      tag_82\n      jumpi\n        /* \"Coinflip.sol\":1902:1918  localFlip(false) */\n      tag_83\n        /* \"Coinflip.sol\":1912:1917  false */\n      0x00\n        /* \"Coinflip.sol\":1902:1911  localFlip */\n      tag_20\n        /* \"Coinflip.sol\":1902:1918  localFlip(false) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"Coinflip.sol\":1877:1954  if(coinFlip < 1) {... */\n      jump(tag_84)\n    tag_82:\n        /* \"Coinflip.sol\":1939:1947  revert() */\n      0x00\n      dup1\n      revert\n        /* \"Coinflip.sol\":1877:1954  if(coinFlip < 1) {... */\n    tag_84:\n        /* \"Coinflip.sol\":1721:1958  function setCoinFlip() public {... */\n      jump\t// out\n        /* \"Coinflip.sol\":594:859  function remotePsychicFlip(address _addr) public {... */\n    tag_43:\n        /* \"Coinflip.sol\":649:672  DeployedCoinFlip myFlip */\n      0x00\n        /* \"Coinflip.sol\":692:697  _addr */\n      dup2\n        /* \"Coinflip.sol\":649:698  DeployedCoinFlip myFlip = DeployedCoinFlip(_addr) */\n      swap1\n      pop\n        /* \"Coinflip.sol\":750:751  1 */\n      0x01\n        /* \"Coinflip.sol\":735:747  block.number */\n      number\n        /* \"Coinflip.sol\":735:751  block.number - 1 */\n      tag_86\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_86:\n        /* \"Coinflip.sol\":725:752  blockhash(block.number - 1) */\n      blockhash\n        /* \"Coinflip.sol\":717:753  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"Coinflip.sol\":704:714  blockValue */\n      0x03\n        /* \"Coinflip.sol\":704:753  blockValue = uint256(blockhash(block.number - 1)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":783:789  FACTOR */\n      sload(0x04)\n        /* \"Coinflip.sol\":770:780  blockValue */\n      sload(0x03)\n        /* \"Coinflip.sol\":770:789  blockValue / FACTOR */\n      tag_87\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_87:\n        /* \"Coinflip.sol\":759:767  coinFlip */\n      0x02\n        /* \"Coinflip.sol\":759:789  coinFlip = blockValue / FACTOR */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":814:815  1 */\n      0x01\n        /* \"Coinflip.sol\":802:810  coinFlip */\n      sload(0x02)\n        /* \"Coinflip.sol\":802:815  coinFlip == 1 */\n      eq\n        /* \"Coinflip.sol\":802:830  coinFlip == 1 ? true : false */\n      tag_88\n      jumpi\n        /* \"Coinflip.sol\":825:830  false */\n      0x00\n        /* \"Coinflip.sol\":802:830  coinFlip == 1 ? true : false */\n      jump(tag_89)\n    tag_88:\n        /* \"Coinflip.sol\":818:822  true */\n      0x01\n        /* \"Coinflip.sol\":802:830  coinFlip == 1 ? true : false */\n    tag_89:\n        /* \"Coinflip.sol\":795:799  side */\n      0x05\n      0x00\n        /* \"Coinflip.sol\":795:830  side = coinFlip == 1 ? true : false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Coinflip.sol\":837:843  myFlip */\n      dup1\n        /* \"Coinflip.sol\":837:848  myFlip.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"Coinflip.sol\":849:853  side */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Coinflip.sol\":837:854  myFlip.flip(side) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_90:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      pop\n        /* \"Coinflip.sol\":594:859  function remotePsychicFlip(address _addr) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Coinflip.sol\":162:192  uint256 public consecutiveWins */\n    tag_45:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"Coinflip.sol\":327:352  uint256 public blockValue */\n    tag_48:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_97:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_99\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:285   */\n    tag_101:\n      0x00\n        /* \"#utility.yul\":233:239   */\n      dup2\n        /* \"#utility.yul\":220:240   */\n      calldataload\n        /* \"#utility.yul\":211:240   */\n      swap1\n      pop\n        /* \"#utility.yul\":249:279   */\n      tag_103\n        /* \"#utility.yul\":273:278   */\n      dup2\n        /* \"#utility.yul\":249:279   */\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":201:285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":291:428   */\n    tag_105:\n      0x00\n        /* \"#utility.yul\":376:382   */\n      dup2\n        /* \"#utility.yul\":370:383   */\n      mload\n        /* \"#utility.yul\":361:383   */\n      swap1\n      pop\n        /* \"#utility.yul\":392:422   */\n      tag_107\n        /* \"#utility.yul\":416:421   */\n      dup2\n        /* \"#utility.yul\":392:422   */\n      tag_104\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":351:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:696   */\n    tag_42:\n      0x00\n        /* \"#utility.yul\":542:544   */\n      0x20\n        /* \"#utility.yul\":530:539   */\n      dup3\n        /* \"#utility.yul\":521:528   */\n      dup5\n        /* \"#utility.yul\":517:540   */\n      sub\n        /* \"#utility.yul\":513:545   */\n      slt\n        /* \"#utility.yul\":510:512   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":558:559   */\n      0x00\n        /* \"#utility.yul\":555:556   */\n      dup1\n        /* \"#utility.yul\":548:560   */\n      revert\n        /* \"#utility.yul\":510:512   */\n    tag_109:\n        /* \"#utility.yul\":601:602   */\n      0x00\n        /* \"#utility.yul\":626:679   */\n      tag_110\n        /* \"#utility.yul\":671:678   */\n      dup5\n        /* \"#utility.yul\":662:668   */\n      dup3\n        /* \"#utility.yul\":651:660   */\n      dup6\n        /* \"#utility.yul\":647:669   */\n      add\n        /* \"#utility.yul\":626:679   */\n      tag_97\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":616:679   */\n      swap2\n      pop\n        /* \"#utility.yul\":572:689   */\n      pop\n        /* \"#utility.yul\":500:696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":702:958   */\n    tag_19:\n      0x00\n        /* \"#utility.yul\":807:809   */\n      0x20\n        /* \"#utility.yul\":795:804   */\n      dup3\n        /* \"#utility.yul\":786:793   */\n      dup5\n        /* \"#utility.yul\":782:805   */\n      sub\n        /* \"#utility.yul\":778:810   */\n      slt\n        /* \"#utility.yul\":775:777   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":820:821   */\n      dup1\n        /* \"#utility.yul\":813:825   */\n      revert\n        /* \"#utility.yul\":775:777   */\n    tag_112:\n        /* \"#utility.yul\":866:867   */\n      0x00\n        /* \"#utility.yul\":891:941   */\n      tag_113\n        /* \"#utility.yul\":933:940   */\n      dup5\n        /* \"#utility.yul\":924:930   */\n      dup3\n        /* \"#utility.yul\":913:922   */\n      dup6\n        /* \"#utility.yul\":909:931   */\n      add\n        /* \"#utility.yul\":891:941   */\n      tag_101\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":881:941   */\n      swap2\n      pop\n        /* \"#utility.yul\":837:951   */\n      pop\n        /* \"#utility.yul\":765:958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":964:1242   */\n    tag_95:\n      0x00\n        /* \"#utility.yul\":1080:1082   */\n      0x20\n        /* \"#utility.yul\":1068:1077   */\n      dup3\n        /* \"#utility.yul\":1059:1066   */\n      dup5\n        /* \"#utility.yul\":1055:1078   */\n      sub\n        /* \"#utility.yul\":1051:1083   */\n      slt\n        /* \"#utility.yul\":1048:1050   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":1096:1097   */\n      0x00\n        /* \"#utility.yul\":1093:1094   */\n      dup1\n        /* \"#utility.yul\":1086:1098   */\n      revert\n        /* \"#utility.yul\":1048:1050   */\n    tag_115:\n        /* \"#utility.yul\":1139:1140   */\n      0x00\n        /* \"#utility.yul\":1164:1225   */\n      tag_116\n        /* \"#utility.yul\":1217:1224   */\n      dup5\n        /* \"#utility.yul\":1208:1214   */\n      dup3\n        /* \"#utility.yul\":1197:1206   */\n      dup6\n        /* \"#utility.yul\":1193:1215   */\n      add\n        /* \"#utility.yul\":1164:1225   */\n      tag_105\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1154:1225   */\n      swap2\n      pop\n        /* \"#utility.yul\":1110:1235   */\n      pop\n        /* \"#utility.yul\":1038:1242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1248:1357   */\n    tag_117:\n        /* \"#utility.yul\":1329:1350   */\n      tag_119\n        /* \"#utility.yul\":1344:1349   */\n      dup2\n        /* \"#utility.yul\":1329:1350   */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1324:1327   */\n      dup3\n        /* \"#utility.yul\":1317:1351   */\n      mstore\n        /* \"#utility.yul\":1307:1357   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1363:1481   */\n    tag_121:\n        /* \"#utility.yul\":1450:1474   */\n      tag_123\n        /* \"#utility.yul\":1468:1473   */\n      dup2\n        /* \"#utility.yul\":1450:1474   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1445:1448   */\n      dup3\n        /* \"#utility.yul\":1438:1475   */\n      mstore\n        /* \"#utility.yul\":1428:1481   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1697   */\n    tag_22:\n      0x00\n        /* \"#utility.yul\":1612:1614   */\n      0x20\n        /* \"#utility.yul\":1601:1610   */\n      dup3\n        /* \"#utility.yul\":1597:1615   */\n      add\n        /* \"#utility.yul\":1589:1615   */\n      swap1\n      pop\n        /* \"#utility.yul\":1625:1690   */\n      tag_126\n        /* \"#utility.yul\":1687:1688   */\n      0x00\n        /* \"#utility.yul\":1676:1685   */\n      dup4\n        /* \"#utility.yul\":1672:1689   */\n      add\n        /* \"#utility.yul\":1663:1669   */\n      dup5\n        /* \"#utility.yul\":1625:1690   */\n      tag_117\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1579:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1925   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":1834:1836   */\n      0x20\n        /* \"#utility.yul\":1823:1832   */\n      dup3\n        /* \"#utility.yul\":1819:1837   */\n      add\n        /* \"#utility.yul\":1811:1837   */\n      swap1\n      pop\n        /* \"#utility.yul\":1847:1918   */\n      tag_128\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1904:1913   */\n      dup4\n        /* \"#utility.yul\":1900:1917   */\n      add\n        /* \"#utility.yul\":1891:1897   */\n      dup5\n        /* \"#utility.yul\":1847:1918   */\n      tag_121\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1801:1925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2116   */\n    tag_54:\n      0x00\n        /* \"#utility.yul\":1988:2008   */\n      tag_130\n        /* \"#utility.yul\":2006:2007   */\n      dup3\n        /* \"#utility.yul\":1988:2008   */\n      tag_124\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1983:2008   */\n      swap2\n      pop\n        /* \"#utility.yul\":2022:2042   */\n      tag_131\n        /* \"#utility.yul\":2040:2041   */\n      dup4\n        /* \"#utility.yul\":2022:2042   */\n      tag_124\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2017:2042   */\n      swap3\n      pop\n        /* \"#utility.yul\":2061:2062   */\n      dup3\n        /* \"#utility.yul\":2051:2053   */\n      tag_132\n      jumpi\n        /* \"#utility.yul\":2066:2084   */\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2051:2053   */\n    tag_132:\n        /* \"#utility.yul\":2108:2109   */\n      dup3\n        /* \"#utility.yul\":2105:2106   */\n      dup3\n        /* \"#utility.yul\":2101:2110   */\n      div\n        /* \"#utility.yul\":2096:2110   */\n      swap1\n      pop\n        /* \"#utility.yul\":1973:2116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2122:2313   */\n    tag_52:\n      0x00\n        /* \"#utility.yul\":2182:2202   */\n      tag_136\n        /* \"#utility.yul\":2200:2201   */\n      dup3\n        /* \"#utility.yul\":2182:2202   */\n      tag_124\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2177:2202   */\n      swap2\n      pop\n        /* \"#utility.yul\":2216:2236   */\n      tag_137\n        /* \"#utility.yul\":2234:2235   */\n      dup4\n        /* \"#utility.yul\":2216:2236   */\n      tag_124\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2211:2236   */\n      swap3\n      pop\n        /* \"#utility.yul\":2255:2256   */\n      dup3\n        /* \"#utility.yul\":2252:2253   */\n      dup3\n        /* \"#utility.yul\":2249:2257   */\n      lt\n        /* \"#utility.yul\":2246:2248   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":2260:2278   */\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2246:2248   */\n    tag_138:\n        /* \"#utility.yul\":2305:2306   */\n      dup3\n        /* \"#utility.yul\":2302:2303   */\n      dup3\n        /* \"#utility.yul\":2298:2307   */\n      sub\n        /* \"#utility.yul\":2290:2307   */\n      swap1\n      pop\n        /* \"#utility.yul\":2167:2313   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2319:2415   */\n    tag_141:\n      0x00\n        /* \"#utility.yul\":2385:2409   */\n      tag_143\n        /* \"#utility.yul\":2403:2408   */\n      dup3\n        /* \"#utility.yul\":2385:2409   */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2374:2409   */\n      swap1\n      pop\n        /* \"#utility.yul\":2364:2415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2421:2511   */\n    tag_120:\n      0x00\n        /* \"#utility.yul\":2498:2503   */\n      dup2\n        /* \"#utility.yul\":2491:2504   */\n      iszero\n        /* \"#utility.yul\":2484:2505   */\n      iszero\n        /* \"#utility.yul\":2473:2505   */\n      swap1\n      pop\n        /* \"#utility.yul\":2463:2511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2517:2643   */\n    tag_144:\n      0x00\n        /* \"#utility.yul\":2594:2636   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2587:2592   */\n      dup3\n        /* \"#utility.yul\":2583:2637   */\n      and\n        /* \"#utility.yul\":2572:2637   */\n      swap1\n      pop\n        /* \"#utility.yul\":2562:2643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2649:2726   */\n    tag_124:\n      0x00\n        /* \"#utility.yul\":2715:2720   */\n      dup2\n        /* \"#utility.yul\":2704:2720   */\n      swap1\n      pop\n        /* \"#utility.yul\":2694:2726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2732:2965   */\n    tag_66:\n      0x00\n        /* \"#utility.yul\":2794:2818   */\n      tag_149\n        /* \"#utility.yul\":2812:2817   */\n      dup3\n        /* \"#utility.yul\":2794:2818   */\n      tag_124\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2785:2818   */\n      swap2\n      pop\n        /* \"#utility.yul\":2840:2906   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2833:2838   */\n      dup3\n        /* \"#utility.yul\":2830:2907   */\n      eq\n        /* \"#utility.yul\":2827:2829   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":2910:2928   */\n      tag_151\n      tag_140\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2827:2829   */\n    tag_150:\n        /* \"#utility.yul\":2957:2958   */\n      0x01\n        /* \"#utility.yul\":2950:2955   */\n      dup3\n        /* \"#utility.yul\":2946:2959   */\n      add\n        /* \"#utility.yul\":2939:2959   */\n      swap1\n      pop\n        /* \"#utility.yul\":2775:2965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2971:3151   */\n    tag_140:\n        /* \"#utility.yul\":3019:3096   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3016:3017   */\n      0x00\n        /* \"#utility.yul\":3009:3097   */\n      mstore\n        /* \"#utility.yul\":3116:3120   */\n      0x11\n        /* \"#utility.yul\":3113:3114   */\n      0x04\n        /* \"#utility.yul\":3106:3121   */\n      mstore\n        /* \"#utility.yul\":3140:3144   */\n      0x24\n        /* \"#utility.yul\":3137:3138   */\n      0x00\n        /* \"#utility.yul\":3130:3145   */\n      revert\n        /* \"#utility.yul\":3157:3337   */\n    tag_134:\n        /* \"#utility.yul\":3205:3282   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3202:3203   */\n      0x00\n        /* \"#utility.yul\":3195:3283   */\n      mstore\n        /* \"#utility.yul\":3302:3306   */\n      0x12\n        /* \"#utility.yul\":3299:3300   */\n      0x04\n        /* \"#utility.yul\":3292:3307   */\n      mstore\n        /* \"#utility.yul\":3326:3330   */\n      0x24\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3316:3331   */\n      revert\n        /* \"#utility.yul\":3343:3465   */\n    tag_100:\n        /* \"#utility.yul\":3416:3440   */\n      tag_155\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_141\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3398   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      dup1\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3398   */\n    tag_156:\n        /* \"#utility.yul\":3386:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3587   */\n    tag_104:\n        /* \"#utility.yul\":3541:3562   */\n      tag_158\n        /* \"#utility.yul\":3556:3561   */\n      dup2\n        /* \"#utility.yul\":3541:3562   */\n      tag_120\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3534:3539   */\n      dup2\n        /* \"#utility.yul\":3531:3563   */\n      eq\n        /* \"#utility.yul\":3521:3523   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":3577:3578   */\n      0x00\n        /* \"#utility.yul\":3574:3575   */\n      dup1\n        /* \"#utility.yul\":3567:3579   */\n      revert\n        /* \"#utility.yul\":3521:3523   */\n    tag_159:\n        /* \"#utility.yul\":3511:3587   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202fef686017010533fe37d0fa9d09bef310fe1e141487712faa5d9d93ee6cafb264736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060045534801561003457600080fd5b506000808190555061082d8061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c80638475c028116100715780638475c028146101415780638c74ddb01461015f578063a68ebe8814610169578063b15c128e14610173578063e6f334d71461018f578063f852be69146101ad576100a8565b806281fe1a146100ad57806304ac3f91146100b75780633fa21806146100e75780635ac947cb146101055780635d06228b14610123575b600080fd5b6100b56101cb565b005b6100d160048036038101906100cc91906105cf565b610240565b6040516100de919061063f565b60405180910390f35b6100ef610302565b6040516100fc919061065a565b60405180910390f35b61010d610308565b60405161011a919061065a565b60405180910390f35b61012b61030e565b604051610138919061063f565b60405180910390f35b6101496103e5565b604051610156919061063f565b60405180910390f35b6101676103f8565b005b610171610405565b005b61018d600480360381019061018891906105a6565b61045d565b005b61019761055b565b6040516101a4919061065a565b60405180910390f35b6101b5610561565b6040516101c2919061065a565b60405180910390f35b6001436101d891906106a6565b4060001c6003819055506004546003546101f29190610675565b60028190555060016002541461020957600061020c565b60015b600560006101000a81548160ff02191690831515021790555061023d600560009054906101000a900460ff16610240565b50565b600060014361024f91906106a6565b4060001c600381905550600354600154141561026a57600080fd5b6003546001819055506004546003546102839190610675565b60028190555060016002541461029a57600061029d565b60015b600560006101000a81548160ff021916908315150217905550811515600560009054906101000a900460ff16151514156102f1576000808154809291906102e390610722565b9190505550600190506102fd565b60008081905550600090505b919050565b60015481565b60025481565b600060014361031d91906106a6565b4060001c6003819055506003546001819055506004546003546103409190610675565b60028190555060016002541461035757600061035a565b60015b600560006101000a81548160ff021916908315150217905550600560009054906101000a900460ff16156103b7576103926001610240565b506000600560006101000a81548160ff021916908315150217905550600190506103e2565b6103c16001610240565b506001600560006101000a81548160ff021916908315150217905550600090505b90565b600560009054906101000a900460ff1681565b6104026001610240565b50565b60014361041291906106a6565b4060001c6003819055506003546001819055506004546003546104359190610675565b60028190555060016002541015610456576104506000610240565b5061045b565b600080fd5b565b600081905060014361046f91906106a6565b4060001c6003819055506004546003546104899190610675565b6002819055506001600254146104a05760006104a3565b60015b600560006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff16631d263f67600560009054906101000a900460ff166040518263ffffffff1660e01b8152600401610504919061063f565b602060405180830381600087803b15801561051e57600080fd5b505af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055691906105f8565b505050565b60005481565b60035481565b600081359050610576816107c9565b92915050565b60008135905061058b816107e0565b92915050565b6000815190506105a0816107e0565b92915050565b6000602082840312156105b857600080fd5b60006105c684828501610567565b91505092915050565b6000602082840312156105e157600080fd5b60006105ef8482850161057c565b91505092915050565b60006020828403121561060a57600080fd5b600061061884828501610591565b91505092915050565b61062a816106ec565b82525050565b61063981610718565b82525050565b60006020820190506106546000830184610621565b92915050565b600060208201905061066f6000830184610630565b92915050565b600061068082610718565b915061068b83610718565b92508261069b5761069a61079a565b5b828204905092915050565b60006106b182610718565b91506106bc83610718565b9250828210156106cf576106ce61076b565b5b828203905092915050565b60006106e5826106f8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061072d82610718565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156107605761075f61076b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6107d2816106da565b81146107dd57600080fd5b50565b6107e9816106ec565b81146107f457600080fd5b5056fea26469706673582212202fef686017010533fe37d0fa9d09bef310fe1e141487712faa5d9d93ee6cafb264736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x82D DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8475C028 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8475C028 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x8C74DDB0 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA68EBE88 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xB15C128E EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xF852BE69 EQ PUSH2 0x1AD JUMPI PUSH2 0xA8 JUMP JUMPDEST DUP1 PUSH3 0x81FE1A EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x4AC3F91 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x3FA21806 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x5AC947CB EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x5D06228B EQ PUSH2 0x123 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5 PUSH2 0x1CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH2 0x3F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH2 0x405 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 NUMBER PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x209 JUMPI PUSH1 0x0 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x23D PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x240 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x29A JUMPI PUSH1 0x0 PUSH2 0x29D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 ISZERO ISZERO PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2E3 SWAP1 PUSH2 0x722 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x357 JUMPI PUSH1 0x0 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3B7 JUMPI PUSH2 0x392 PUSH1 0x1 PUSH2 0x240 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x3C1 PUSH1 0x1 PUSH2 0x240 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x402 PUSH1 0x1 PUSH2 0x240 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 NUMBER PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x456 JUMPI PUSH2 0x450 PUSH1 0x0 PUSH2 0x240 JUMP JUMPDEST POP PUSH2 0x45B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x1 NUMBER PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x4A0 JUMPI PUSH1 0x0 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x5F8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x576 DUP2 PUSH2 0x7C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x58B DUP2 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5A0 DUP2 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C6 DUP5 DUP3 DUP6 ADD PUSH2 0x567 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5EF DUP5 DUP3 DUP6 ADD PUSH2 0x57C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP5 DUP3 DUP6 ADD PUSH2 0x591 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x62A DUP2 PUSH2 0x6EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x639 DUP2 PUSH2 0x718 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x654 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x621 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x66F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x630 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x680 DUP3 PUSH2 0x718 JUMP JUMPDEST SWAP2 POP PUSH2 0x68B DUP4 PUSH2 0x718 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x69B JUMPI PUSH2 0x69A PUSH2 0x79A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B1 DUP3 PUSH2 0x718 JUMP JUMPDEST SWAP2 POP PUSH2 0x6BC DUP4 PUSH2 0x718 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CE PUSH2 0x76B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E5 DUP3 PUSH2 0x6F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72D DUP3 PUSH2 0x718 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x760 JUMPI PUSH2 0x75F PUSH2 0x76B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x7D2 DUP2 PUSH2 0x6DA JUMP JUMPDEST DUP2 EQ PUSH2 0x7DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7E9 DUP2 PUSH2 0x6EC JUMP JUMPDEST DUP2 EQ PUSH2 0x7F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEF PUSH9 0x6017010533FE37D0FA SWAP14 MULMOD 0xBE RETURN LT INVALID 0x1E EQ EQ DUP8 PUSH18 0x2FAA5D9D93EE6CAFB264736F6C6343000800 STOP CALLER ",
							"sourceMap": "139:2194:0:-:0;;;442:77;425:94;;544:44;;;;;;;;;;582:1;564:15;:19;;;;139:2194;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3590:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "233:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "220:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "220:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "273:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "249:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "179:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "187:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "195:5:1",
														"type": ""
													}
												],
												"src": "152:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "351:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "361:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "370:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "361:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "416:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "392:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "392:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "329:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "337:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "345:5:1",
														"type": ""
													}
												],
												"src": "291:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "500:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "546:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "555:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "558:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "548:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "548:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "548:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "521:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "530:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "517:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "517:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "542:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:32:1"
															},
															"nodeType": "YulIf",
															"src": "510:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "572:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "587:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "601:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "591:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "616:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "651:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "662:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "647:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "647:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "671:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "626:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "626:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "616:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "470:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "481:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "493:6:1",
														"type": ""
													}
												],
												"src": "434:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "765:193:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "811:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "823:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "813:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "813:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "786:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "795:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "807:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "778:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:32:1"
															},
															"nodeType": "YulIf",
															"src": "775:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "837:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "852:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "866:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "856:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "881:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "913:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "924:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "909:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "909:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "933:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "891:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "891:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "881:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:1",
														"type": ""
													}
												],
												"src": "702:256:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1038:204:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1084:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1093:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1096:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1086:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1086:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1086:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1059:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1068:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1055:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1055:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1080:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1051:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1051:32:1"
															},
															"nodeType": "YulIf",
															"src": "1048:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1110:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1125:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1139:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1129:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1154:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1197:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1208:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1193:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1193:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1217:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1164:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1164:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1154:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1008:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1019:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1031:6:1",
														"type": ""
													}
												],
												"src": "964:278:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1307:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1324:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1344:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1329:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1329:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1317:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1295:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1302:3:1",
														"type": ""
													}
												],
												"src": "1248:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1428:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1445:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1468:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1450:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1450:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1438:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1438:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1416:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1423:3:1",
														"type": ""
													}
												],
												"src": "1363:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1589:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1601:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1612:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1597:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1589:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1663:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1676:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1687:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1672:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1672:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1625:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1625:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1625:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1551:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1563:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1574:4:1",
														"type": ""
													}
												],
												"src": "1487:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1801:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1811:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1823:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1834:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1819:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1811:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1891:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1915:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1900:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1847:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1847:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1847:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1773:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1785:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1796:4:1",
														"type": ""
													}
												],
												"src": "1703:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1973:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1983:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2006:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1988:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1983:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2017:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2040:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2022:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2022:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2017:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2064:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2066:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2066:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2066:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2061:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:9:1"
															},
															"nodeType": "YulIf",
															"src": "2051:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2096:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2105:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2108:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2101:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2101:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2096:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1962:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1965:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1971:1:1",
														"type": ""
													}
												],
												"src": "1931:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2167:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2177:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2200:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2182:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2177:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2211:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2234:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2216:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2211:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2258:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2260:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2260:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2260:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2252:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2255:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2249:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2249:8:1"
															},
															"nodeType": "YulIf",
															"src": "2246:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2290:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2302:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2305:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2298:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2298:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2290:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2153:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2156:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2162:4:1",
														"type": ""
													}
												],
												"src": "2122:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2364:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2374:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2403:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2385:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2374:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2346:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2356:7:1",
														"type": ""
													}
												],
												"src": "2319:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2463:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2473:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2498:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2491:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2491:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2484:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2484:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2473:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2445:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2455:7:1",
														"type": ""
													}
												],
												"src": "2421:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2572:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2587:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2594:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2583:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2572:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2544:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2554:7:1",
														"type": ""
													}
												],
												"src": "2517:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2694:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2704:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2715:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2704:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2676:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2686:7:1",
														"type": ""
													}
												],
												"src": "2649:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2775:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2785:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2812:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2794:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2794:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2785:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2908:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2910:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2910:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2910:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2833:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2830:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:77:1"
															},
															"nodeType": "YulIf",
															"src": "2827:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2939:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2950:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2957:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2946:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2946:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2939:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2761:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2771:3:1",
														"type": ""
													}
												],
												"src": "2732:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2999:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3016:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3019:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3009:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3009:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3113:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3116:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3106:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3106:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3106:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3137:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3140:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3130:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2971:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3185:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3202:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3205:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3195:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3195:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3195:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3299:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3302:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3326:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3316:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3316:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "3157:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3386:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3443:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3399:43:1"
															},
															"nodeType": "YulIf",
															"src": "3396:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3379:5:1",
														"type": ""
													}
												],
												"src": "3343:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3565:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3574:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3577:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3567:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3567:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3567:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3534:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3556:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3541:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3541:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3531:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3531:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3524:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3524:40:1"
															},
															"nodeType": "YulIf",
															"src": "3521:2:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3504:5:1",
														"type": ""
													}
												],
												"src": "3471:116:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a85760003560e01c80638475c028116100715780638475c028146101415780638c74ddb01461015f578063a68ebe8814610169578063b15c128e14610173578063e6f334d71461018f578063f852be69146101ad576100a8565b806281fe1a146100ad57806304ac3f91146100b75780633fa21806146100e75780635ac947cb146101055780635d06228b14610123575b600080fd5b6100b56101cb565b005b6100d160048036038101906100cc91906105cf565b610240565b6040516100de919061063f565b60405180910390f35b6100ef610302565b6040516100fc919061065a565b60405180910390f35b61010d610308565b60405161011a919061065a565b60405180910390f35b61012b61030e565b604051610138919061063f565b60405180910390f35b6101496103e5565b604051610156919061063f565b60405180910390f35b6101676103f8565b005b610171610405565b005b61018d600480360381019061018891906105a6565b61045d565b005b61019761055b565b6040516101a4919061065a565b60405180910390f35b6101b5610561565b6040516101c2919061065a565b60405180910390f35b6001436101d891906106a6565b4060001c6003819055506004546003546101f29190610675565b60028190555060016002541461020957600061020c565b60015b600560006101000a81548160ff02191690831515021790555061023d600560009054906101000a900460ff16610240565b50565b600060014361024f91906106a6565b4060001c600381905550600354600154141561026a57600080fd5b6003546001819055506004546003546102839190610675565b60028190555060016002541461029a57600061029d565b60015b600560006101000a81548160ff021916908315150217905550811515600560009054906101000a900460ff16151514156102f1576000808154809291906102e390610722565b9190505550600190506102fd565b60008081905550600090505b919050565b60015481565b60025481565b600060014361031d91906106a6565b4060001c6003819055506003546001819055506004546003546103409190610675565b60028190555060016002541461035757600061035a565b60015b600560006101000a81548160ff021916908315150217905550600560009054906101000a900460ff16156103b7576103926001610240565b506000600560006101000a81548160ff021916908315150217905550600190506103e2565b6103c16001610240565b506001600560006101000a81548160ff021916908315150217905550600090505b90565b600560009054906101000a900460ff1681565b6104026001610240565b50565b60014361041291906106a6565b4060001c6003819055506003546001819055506004546003546104359190610675565b60028190555060016002541015610456576104506000610240565b5061045b565b600080fd5b565b600081905060014361046f91906106a6565b4060001c6003819055506004546003546104899190610675565b6002819055506001600254146104a05760006104a3565b60015b600560006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff16631d263f67600560009054906101000a900460ff166040518263ffffffff1660e01b8152600401610504919061063f565b602060405180830381600087803b15801561051e57600080fd5b505af1158015610532573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055691906105f8565b505050565b60005481565b60035481565b600081359050610576816107c9565b92915050565b60008135905061058b816107e0565b92915050565b6000815190506105a0816107e0565b92915050565b6000602082840312156105b857600080fd5b60006105c684828501610567565b91505092915050565b6000602082840312156105e157600080fd5b60006105ef8482850161057c565b91505092915050565b60006020828403121561060a57600080fd5b600061061884828501610591565b91505092915050565b61062a816106ec565b82525050565b61063981610718565b82525050565b60006020820190506106546000830184610621565b92915050565b600060208201905061066f6000830184610630565b92915050565b600061068082610718565b915061068b83610718565b92508261069b5761069a61079a565b5b828204905092915050565b60006106b182610718565b91506106bc83610718565b9250828210156106cf576106ce61076b565b5b828203905092915050565b60006106e5826106f8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061072d82610718565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156107605761075f61076b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6107d2816106da565b81146107dd57600080fd5b50565b6107e9816106ec565b81146107f457600080fd5b5056fea26469706673582212202fef686017010533fe37d0fa9d09bef310fe1e141487712faa5d9d93ee6cafb264736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8475C028 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8475C028 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x8C74DDB0 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA68EBE88 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xB15C128E EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xF852BE69 EQ PUSH2 0x1AD JUMPI PUSH2 0xA8 JUMP JUMPDEST DUP1 PUSH3 0x81FE1A EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x4AC3F91 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x3FA21806 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x5AC947CB EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x5D06228B EQ PUSH2 0x123 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5 PUSH2 0x1CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH2 0x3F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH2 0x405 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 NUMBER PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x209 JUMPI PUSH1 0x0 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x23D PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x240 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x29A JUMPI PUSH1 0x0 PUSH2 0x29D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 ISZERO ISZERO PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2E3 SWAP1 PUSH2 0x722 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 NUMBER PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x357 JUMPI PUSH1 0x0 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3B7 JUMPI PUSH2 0x392 PUSH1 0x1 PUSH2 0x240 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x3C1 PUSH1 0x1 PUSH2 0x240 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x402 PUSH1 0x1 PUSH2 0x240 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 NUMBER PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x456 JUMPI PUSH2 0x450 PUSH1 0x0 PUSH2 0x240 JUMP JUMPDEST POP PUSH2 0x45B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x1 NUMBER PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD EQ PUSH2 0x4A0 JUMPI PUSH1 0x0 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x5F8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x576 DUP2 PUSH2 0x7C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x58B DUP2 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5A0 DUP2 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C6 DUP5 DUP3 DUP6 ADD PUSH2 0x567 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5EF DUP5 DUP3 DUP6 ADD PUSH2 0x57C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x618 DUP5 DUP3 DUP6 ADD PUSH2 0x591 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x62A DUP2 PUSH2 0x6EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x639 DUP2 PUSH2 0x718 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x654 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x621 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x66F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x630 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x680 DUP3 PUSH2 0x718 JUMP JUMPDEST SWAP2 POP PUSH2 0x68B DUP4 PUSH2 0x718 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x69B JUMPI PUSH2 0x69A PUSH2 0x79A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B1 DUP3 PUSH2 0x718 JUMP JUMPDEST SWAP2 POP PUSH2 0x6BC DUP4 PUSH2 0x718 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CE PUSH2 0x76B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E5 DUP3 PUSH2 0x6F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72D DUP3 PUSH2 0x718 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x760 JUMPI PUSH2 0x75F PUSH2 0x76B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x7D2 DUP2 PUSH2 0x6DA JUMP JUMPDEST DUP2 EQ PUSH2 0x7DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7E9 DUP2 PUSH2 0x6EC JUMP JUMPDEST DUP2 EQ PUSH2 0x7F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEF PUSH9 0x6017010533FE37D0FA SWAP14 MULMOD 0xBE RETURN LT INVALID 0x1E EQ EQ DUP8 PUSH18 0x2FAA5D9D93EE6CAFB264736F6C6343000800 STOP CALLER ",
							"sourceMap": "139:2194:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1282:194;;;:::i;:::-;;863:413;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;196:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;223;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:368;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;523:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1660:57;;;:::i;:::-;;1721:237;;;:::i;:::-;;594:265;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;162:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;327:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1282:194;1369:1;1354:12;:16;;;;:::i;:::-;1344:27;1336:36;;1323:10;:49;;;;1402:6;;1389:10;;:19;;;;:::i;:::-;1378:8;:30;;;;1433:1;1421:8;;:13;:28;;1444:5;1421:28;;;1437:4;1421:28;1414:4;;:35;;;;;;;;;;;;;;;;;;1456:15;1466:4;;;;;;;;;;;1456:9;:15::i;:::-;;1282:194::o;863:413::-;911:4;969:1;954:12;:16;;;;:::i;:::-;944:27;936:36;;923:10;:49;;;;995:10;;983:8;;:22;979:51;;;1015:8;;;979:51;1047:10;;1036:8;:21;;;;1087:6;;1074:10;;:19;;;;:::i;:::-;1063:8;:30;;;;1118:1;1106:8;;:13;:28;;1129:5;1106:28;;;1122:4;1106:28;1099:4;;:35;;;;;;;;;;;;;;;;;;1153:6;1145:14;;:4;;;;;;;;;;;:14;;;1141:131;;;1169:15;;:17;;;;;;;;;:::i;:::-;;;;;;1201:4;1194:11;;;;1141:131;1244:1;1226:15;:19;;;;1260:5;1253:12;;863:413;;;;:::o;196:23::-;;;;:::o;223:::-;;;;:::o;1962:368::-;1999:4;2057:1;2042:12;:16;;;;:::i;:::-;2032:27;2024:36;;2011:10;:49;;;;2078:10;;2067:8;:21;;;;2118:6;;2105:10;;:19;;;;:::i;:::-;2094:8;:30;;;;2149:1;2137:8;;:13;:28;;2160:5;2137:28;;;2153:4;2137:28;2130:4;;:35;;;;;;;;;;;;;;;;;;2176:4;;;;;;;;;;;2172:154;;;2190:15;2200:4;2190:9;:15::i;:::-;;2220:5;2213:4;;:12;;;;;;;;;;;;;;;;;;2240:4;2233:11;;;;2172:154;2265:15;2275:4;2265:9;:15::i;:::-;;2295:4;2288;;:11;;;;;;;;;;;;;;;;;;2314:5;2307:12;;1962:368;;:::o;523:16::-;;;;;;;;;;;;;:::o;1660:57::-;1697:15;1707:4;1697:9;:15::i;:::-;;1660:57::o;1721:237::-;1803:1;1788:12;:16;;;;:::i;:::-;1778:27;1770:36;;1757:10;:49;;;;1824:10;;1813:8;:21;;;;1864:6;;1851:10;;:19;;;;:::i;:::-;1840:8;:30;;;;1891:1;1880:8;;:12;1877:77;;;1902:16;1912:5;1902:9;:16::i;:::-;;1877:77;;;1939:8;;;1877:77;1721:237::o;594:265::-;649:23;692:5;649:49;;750:1;735:12;:16;;;;:::i;:::-;725:27;717:36;;704:10;:49;;;;783:6;;770:10;;:19;;;;:::i;:::-;759:8;:30;;;;814:1;802:8;;:13;:28;;825:5;802:28;;;818:4;802:28;795:4;;:35;;;;;;;;;;;;;;;;;;837:6;:11;;;849:4;;;;;;;;;;;837:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;594:265;;:::o;162:30::-;;;;:::o;327:25::-;;;;:::o;7:139:1:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:137::-;;376:6;370:13;361:22;;392:30;416:5;392:30;:::i;:::-;351:77;;;;:::o;434:262::-;;542:2;530:9;521:7;517:23;513:32;510:2;;;558:1;555;548:12;510:2;601:1;626:53;671:7;662:6;651:9;647:22;626:53;:::i;:::-;616:63;;572:117;500:196;;;;:::o;702:256::-;;807:2;795:9;786:7;782:23;778:32;775:2;;;823:1;820;813:12;775:2;866:1;891:50;933:7;924:6;913:9;909:22;891:50;:::i;:::-;881:60;;837:114;765:193;;;;:::o;964:278::-;;1080:2;1068:9;1059:7;1055:23;1051:32;1048:2;;;1096:1;1093;1086:12;1048:2;1139:1;1164:61;1217:7;1208:6;1197:9;1193:22;1164:61;:::i;:::-;1154:71;;1110:125;1038:204;;;;:::o;1248:109::-;1329:21;1344:5;1329:21;:::i;:::-;1324:3;1317:34;1307:50;;:::o;1363:118::-;1450:24;1468:5;1450:24;:::i;:::-;1445:3;1438:37;1428:53;;:::o;1487:210::-;;1612:2;1601:9;1597:18;1589:26;;1625:65;1687:1;1676:9;1672:17;1663:6;1625:65;:::i;:::-;1579:118;;;;:::o;1703:222::-;;1834:2;1823:9;1819:18;1811:26;;1847:71;1915:1;1904:9;1900:17;1891:6;1847:71;:::i;:::-;1801:124;;;;:::o;1931:185::-;;1988:20;2006:1;1988:20;:::i;:::-;1983:25;;2022:20;2040:1;2022:20;:::i;:::-;2017:25;;2061:1;2051:2;;2066:18;;:::i;:::-;2051:2;2108:1;2105;2101:9;2096:14;;1973:143;;;;:::o;2122:191::-;;2182:20;2200:1;2182:20;:::i;:::-;2177:25;;2216:20;2234:1;2216:20;:::i;:::-;2211:25;;2255:1;2252;2249:8;2246:2;;;2260:18;;:::i;:::-;2246:2;2305:1;2302;2298:9;2290:17;;2167:146;;;;:::o;2319:96::-;;2385:24;2403:5;2385:24;:::i;:::-;2374:35;;2364:51;;;:::o;2421:90::-;;2498:5;2491:13;2484:21;2473:32;;2463:48;;;:::o;2517:126::-;;2594:42;2587:5;2583:54;2572:65;;2562:81;;;:::o;2649:77::-;;2715:5;2704:16;;2694:32;;;:::o;2732:233::-;;2794:24;2812:5;2794:24;:::i;:::-;2785:33;;2840:66;2833:5;2830:77;2827:2;;;2910:18;;:::i;:::-;2827:2;2957:1;2950:5;2946:13;2939:20;;2775:190;;;:::o;2971:180::-;3019:77;3016:1;3009:88;3116:4;3113:1;3106:15;3140:4;3137:1;3130:15;3157:180;3205:77;3202:1;3195:88;3302:4;3299:1;3292:15;3326:4;3323:1;3316:15;3343:122;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:2;;3455:1;3452;3445:12;3396:2;3386:79;:::o;3471:116::-;3541:21;3556:5;3541:21;:::i;:::-;3534:5;3531:32;3521:2;;3577:1;3574;3567:12;3521:2;3511:76;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "418600",
								"executionCost": "25475",
								"totalCost": "444075"
							},
							"external": {
								"blankFlip()": "infinite",
								"blockValue()": "1239",
								"coinFlip()": "1196",
								"consecutiveWins()": "1217",
								"lastHash()": "1174",
								"localFlip(bool)": "infinite",
								"localPsychicFlip()": "infinite",
								"positiveFlip()": "infinite",
								"remotePsychicFlip(address)": "infinite",
								"setCoinFlip()": "infinite",
								"side()": "1171"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 2333,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 139,
									"end": 2333,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 139,
									"end": 2333,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 442,
									"end": 519,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 425,
									"end": 519,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 425,
									"end": 519,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 544,
									"end": 588,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 544,
									"end": 588,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 544,
									"end": 588,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 544,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 544,
									"end": 588,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 544,
									"end": 588,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 544,
									"end": 588,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 544,
									"end": 588,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 544,
									"end": 588,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 544,
									"end": 588,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 544,
									"end": 588,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 582,
									"end": 583,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 579,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 564,
									"end": 583,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 564,
									"end": 583,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 564,
									"end": 583,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 564,
									"end": 583,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 139,
									"end": 2333,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 2333,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 139,
									"end": 2333,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 2333,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 2333,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 139,
									"end": 2333,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 2333,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202fef686017010533fe37d0fa9d09bef310fe1e141487712faa5d9d93ee6cafb264736f6c63430008000033",
									".code": [
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "8475C028"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "8475C028"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "8C74DDB0"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "A68EBE88"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "B15C128E"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "F852BE69"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "81FE1A"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "4AC3F91"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "3FA21806"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "5AC947CB"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "5D06228B"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 2333,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1282,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1282,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1282,
											"end": 1476,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1282,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1476,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 196,
											"end": 219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 196,
											"end": 219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 196,
											"end": 219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 219,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 196,
											"end": 219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 196,
											"end": 219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 196,
											"end": 219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 219,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 196,
											"end": 219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1717,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1660,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1660,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1660,
											"end": 1717,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1717,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1660,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1717,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1721,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1721,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1721,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1721,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1721,
											"end": 1958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1721,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1721,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1721,
											"end": 1958,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 594,
											"end": 859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 859,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 594,
											"end": 859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 594,
											"end": 859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 594,
											"end": 859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 859,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 594,
											"end": 859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 594,
											"end": 859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 859,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 162,
											"end": 192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 162,
											"end": 192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 162,
											"end": 192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 162,
											"end": 192,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 162,
											"end": 192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 162,
											"end": 192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 162,
											"end": 192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 162,
											"end": 192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 162,
											"end": 192,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 162,
											"end": 192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 162,
											"end": 192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 327,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 327,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 327,
											"end": 352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 327,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 327,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 327,
											"end": 352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 327,
											"end": 352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 327,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 327,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1282,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1354,
											"end": 1370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1354,
											"end": 1370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1354,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1354,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1344,
											"end": 1371,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1333,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1399,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1389,
											"end": 1399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1389,
											"end": 1408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1389,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1389,
											"end": 1408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1408,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1389,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1386,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1421,
											"end": 1429,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1421,
											"end": 1429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1421,
											"end": 1434,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1421,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1421,
											"end": 1449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1421,
											"end": 1449,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1421,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1421,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1437,
											"end": 1441,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1421,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1421,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1414,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1456,
											"end": 1471,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1456,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1476,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 911,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 969,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 954,
											"end": 966,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 954,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 954,
											"end": 970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 954,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 944,
											"end": 971,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 936,
											"end": 972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 972,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 923,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 923,
											"end": 972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 923,
											"end": 972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 923,
											"end": 972,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 923,
											"end": 972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1005,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 995,
											"end": 1005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 983,
											"end": 991,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 983,
											"end": 991,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 979,
											"end": 1030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1015,
											"end": 1023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1023,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1030,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 979,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1071,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1063,
											"end": 1093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1093,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1106,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1106,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1106,
											"end": 1134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1106,
											"end": 1134,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1134,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1106,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1106,
											"end": 1134,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1106,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1103,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1099,
											"end": 1103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1159,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1141,
											"end": 1272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1194,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1194,
											"end": 1205,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1272,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1141,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1245,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 863,
											"end": 1276,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 219,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 196,
											"end": 219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 196,
											"end": 219,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 196,
											"end": 219,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2042,
											"end": 2054,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2042,
											"end": 2058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2042,
											"end": 2058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2058,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2042,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2059,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2060,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2011,
											"end": 2060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2060,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2088,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2078,
											"end": 2088,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2124,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2118,
											"end": 2124,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2115,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2105,
											"end": 2124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2105,
											"end": 2124,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2105,
											"end": 2124,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2105,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2094,
											"end": 2124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2124,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2137,
											"end": 2145,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2137,
											"end": 2145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2157,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2134,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2130,
											"end": 2134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2326,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2172,
											"end": 2326,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2200,
											"end": 2204,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2190,
											"end": 2205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2190,
											"end": 2205,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2190,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2213,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2240,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2233,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2244,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2326,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2172,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2275,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2265,
											"end": 2280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2280,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2265,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2299,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2288,
											"end": 2292,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2288,
											"end": 2292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2330,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 523,
											"end": 539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 523,
											"end": 539,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1660,
											"end": 1717,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1660,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1707,
											"end": 1711,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1697,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1717,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1721,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1721,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1804,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1788,
											"end": 1800,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1805,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1806,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1767,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1757,
											"end": 1806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1806,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1834,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1824,
											"end": 1834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1821,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1864,
											"end": 1870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1851,
											"end": 1861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1840,
											"end": 1870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1870,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1880,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1880,
											"end": 1888,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1892,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1877,
											"end": 1954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1912,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1877,
											"end": 1954,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1954,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1877,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1954,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1877,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1721,
											"end": 1958,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 594,
											"end": 859,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 594,
											"end": 859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 649,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 649,
											"end": 698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 649,
											"end": 698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 750,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 735,
											"end": 747,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 735,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 735,
											"end": 751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 735,
											"end": 751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 735,
											"end": 751,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 735,
											"end": 751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 725,
											"end": 752,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 717,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 753,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 704,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 704,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 753,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 780,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 770,
											"end": 780,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 770,
											"end": 789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 770,
											"end": 789,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 770,
											"end": 789,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 770,
											"end": 789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 759,
											"end": 789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 759,
											"end": 789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 789,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 814,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 802,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 802,
											"end": 810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 802,
											"end": 815,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 802,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 802,
											"end": 830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 825,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 802,
											"end": 830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 830,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 802,
											"end": 830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 818,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 802,
											"end": 830,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 802,
											"end": 830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 795,
											"end": 799,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 795,
											"end": 799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 795,
											"end": 830,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 795,
											"end": 830,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 795,
											"end": 830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 837,
											"end": 843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 837,
											"end": 848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 837,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 849,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 849,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 849,
											"end": 853,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 853,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 849,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 849,
											"end": 853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 837,
											"end": 854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 859,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 162,
											"end": 192,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 162,
											"end": 192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 162,
											"end": 192,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 327,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 327,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 327,
											"end": 352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 327,
											"end": 352,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 285,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 152,
											"end": 285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 211,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 273,
											"end": 278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 249,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 201,
											"end": 285,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 201,
											"end": 285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 201,
											"end": 285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 201,
											"end": 285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 201,
											"end": 285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 291,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 291,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 370,
											"end": 383,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 361,
											"end": 383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 392,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 416,
											"end": 421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 392,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 392,
											"end": 422,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 392,
											"end": 422,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 392,
											"end": 422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 351,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 351,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 351,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 434,
											"end": 696,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 434,
											"end": 696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 434,
											"end": 696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 530,
											"end": 539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 521,
											"end": 528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 517,
											"end": 540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 513,
											"end": 545,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 510,
											"end": 512,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 510,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 510,
											"end": 512,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 558,
											"end": 559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 556,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 560,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 510,
											"end": 512,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 510,
											"end": 512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 601,
											"end": 602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 671,
											"end": 678,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 662,
											"end": 668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 651,
											"end": 660,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 647,
											"end": 669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 626,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 626,
											"end": 679,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 626,
											"end": 679,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 626,
											"end": 679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 696,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 500,
											"end": 696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 696,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 702,
											"end": 958,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 702,
											"end": 958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 786,
											"end": 793,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 782,
											"end": 805,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 778,
											"end": 810,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 775,
											"end": 777,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 775,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 775,
											"end": 777,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 813,
											"end": 825,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 775,
											"end": 777,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 775,
											"end": 777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 866,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 933,
											"end": 940,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 913,
											"end": 922,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 909,
											"end": 931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 891,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 891,
											"end": 941,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 891,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 837,
											"end": 951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 765,
											"end": 958,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 765,
											"end": 958,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 765,
											"end": 958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 765,
											"end": 958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 765,
											"end": 958,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 964,
											"end": 1242,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 964,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1083,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1098,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1206,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1164,
											"end": 1225,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1164,
											"end": 1225,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 1164,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1242,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1242,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1248,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1248,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1344,
											"end": 1349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1329,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1329,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1329,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1357,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1363,
											"end": 1481,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1363,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1468,
											"end": 1473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1448,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1487,
											"end": 1697,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1487,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1669,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1625,
											"end": 1690,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1625,
											"end": 1690,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1625,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1697,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1703,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1703,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1823,
											"end": 1832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1847,
											"end": 1918,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1847,
											"end": 1918,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1847,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1925,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1925,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1931,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1931,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2006,
											"end": 2007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2040,
											"end": 2041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2022,
											"end": 2042,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2022,
											"end": 2042,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2022,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2042,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2051,
											"end": 2053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2066,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2066,
											"end": 2084,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2066,
											"end": 2084,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2066,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2053,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2051,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2116,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2122,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2122,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2200,
											"end": 2201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2182,
											"end": 2202,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2182,
											"end": 2202,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2182,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2202,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2234,
											"end": 2235,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2216,
											"end": 2236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2216,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2216,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2257,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2307,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2313,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2319,
											"end": 2415,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2319,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2403,
											"end": 2408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2385,
											"end": 2409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2385,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2385,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2415,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2421,
											"end": 2511,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2421,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2511,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2517,
											"end": 2643,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2517,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2636,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2587,
											"end": 2592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2637,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2649,
											"end": 2726,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2649,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2694,
											"end": 2726,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2694,
											"end": 2726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2694,
											"end": 2726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2694,
											"end": 2726,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2732,
											"end": 2965,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2732,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2812,
											"end": 2817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2907,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2829,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2827,
											"end": 2829,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2829,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2827,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2958,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2950,
											"end": 2955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2965,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2971,
											"end": 3151,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2971,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3096,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3016,
											"end": 3017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3144,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3137,
											"end": 3138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3145,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3337,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3157,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3202,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3306,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3299,
											"end": 3300,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3292,
											"end": 3307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3330,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3331,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3396,
											"end": 3398,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3398,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3396,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3465,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3471,
											"end": 3587,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3471,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3556,
											"end": 3561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3541,
											"end": 3562,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3541,
											"end": 3562,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3541,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3531,
											"end": 3563,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3521,
											"end": 3523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3579,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3523,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3521,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3587,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"blankFlip()": "5d06228b",
							"blockValue()": "f852be69",
							"coinFlip()": "5ac947cb",
							"consecutiveWins()": "e6f334d7",
							"lastHash()": "3fa21806",
							"localFlip(bool)": "04ac3f91",
							"localPsychicFlip()": "0081fe1a",
							"positiveFlip()": "8c74ddb0",
							"remotePsychicFlip(address)": "b15c128e",
							"setCoinFlip()": "a68ebe88",
							"side()": "8475c028"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"blankFlip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coinFlip\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"localFlip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localPsychicFlip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positiveFlip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"remotePsychicFlip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setCoinFlip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"side\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Coinflip.sol\":\"CoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Coinflip.sol\":{\"keccak256\":\"0x0b85110747e5d57dee30407c9d038685535123a09a4cf55971a569ca06fd6fdc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f461cc5d48d5afc1ff8874bbafbb34db9638fa2936a8dd2eb16e2644d6dc54fb\",\"dweb:/ipfs/Qmaim8VK2GzdsbLUUfAR7K2vdyuMmiMdX26pkneaTjrwER\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "Coinflip.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 13,
								"contract": "Coinflip.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 15,
								"contract": "Coinflip.sol:CoinFlip",
								"label": "coinFlip",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 17,
								"contract": "Coinflip.sol:CoinFlip",
								"label": "blockValue",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 20,
								"contract": "Coinflip.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 22,
								"contract": "Coinflip.sol:CoinFlip",
								"label": "side",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DeployedCoinFlip": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_g1",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_g1\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Coinflip.sol\":\"DeployedCoinFlip\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Coinflip.sol\":{\"keccak256\":\"0x0b85110747e5d57dee30407c9d038685535123a09a4cf55971a569ca06fd6fdc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f461cc5d48d5afc1ff8874bbafbb34db9638fa2936a8dd2eb16e2644d6dc54fb\",\"dweb:/ipfs/Qmaim8VK2GzdsbLUUfAR7K2vdyuMmiMdX26pkneaTjrwER\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Coinflip.sol": {
				"ast": {
					"absolutePath": "Coinflip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							284
						],
						"DeployedCoinFlip": [
							9
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "DeployedCoinFlip",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1d263f67",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_g1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "102:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "102:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "101:10:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "129:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "129:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "128:6:0"
									},
									"scope": 9,
									"src": "88:47:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 285,
							"src": "57:80:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "CoinFlip",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 11,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nodeType": "VariableDeclaration",
									"scope": 284,
									"src": "162:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "162:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3fa21806",
									"id": 13,
									"mutability": "mutable",
									"name": "lastHash",
									"nodeType": "VariableDeclaration",
									"scope": 284,
									"src": "196:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5ac947cb",
									"id": 15,
									"mutability": "mutable",
									"name": "coinFlip",
									"nodeType": "VariableDeclaration",
									"scope": 284,
									"src": "223:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "223:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f852be69",
									"id": 17,
									"mutability": "mutable",
									"name": "blockValue",
									"nodeType": "VariableDeclaration",
									"scope": 284,
									"src": "327:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 16,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "327:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "FACTOR",
									"nodeType": "VariableDeclaration",
									"scope": 284,
									"src": "425:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "425:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "442:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "8475c028",
									"id": 22,
									"mutability": "mutable",
									"name": "side",
									"nodeType": "VariableDeclaration",
									"scope": 284,
									"src": "523:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 21,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "523:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "558:30:0",
										"statements": [
											{
												"expression": {
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 25,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "564:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "582:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "564:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "564:19:0"
											}
										]
									},
									"id": 30,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "555:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "558:0:0"
									},
									"scope": 284,
									"src": "544:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "643:216:0",
										"statements": [
											{
												"assignments": [
													37
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "myFlip",
														"nodeType": "VariableDeclaration",
														"scope": 75,
														"src": "649:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_DeployedCoinFlip_$9",
															"typeString": "contract DeployedCoinFlip"
														},
														"typeName": {
															"id": 36,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 35,
																"name": "DeployedCoinFlip",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 9,
																"src": "649:16:0"
															},
															"referencedDeclaration": 9,
															"src": "649:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_DeployedCoinFlip_$9",
																"typeString": "contract DeployedCoinFlip"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 41,
												"initialValue": {
													"arguments": [
														{
															"id": 39,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "692:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 38,
														"name": "DeployedCoinFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "675:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_DeployedCoinFlip_$9_$",
															"typeString": "type(contract DeployedCoinFlip)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "675:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_DeployedCoinFlip_$9",
														"typeString": "contract DeployedCoinFlip"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "649:49:0"
											},
											{
												"expression": {
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 42,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "704:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 46,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "735:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 47,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "735:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 48,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "750:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "735:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 45,
																	"name": "blockhash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967291,
																	"src": "725:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																		"typeString": "function (uint256) view returns (bytes32)"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "725:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "717:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 43,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "717:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "717:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "704:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "704:49:0"
											},
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 54,
														"name": "coinFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "759:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 55,
															"name": "blockValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "770:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 56,
															"name": "FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "783:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "770:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "759:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "759:30:0"
											},
											{
												"expression": {
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 60,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "795:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 61,
																"name": "coinFlip",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "802:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "814:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "802:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "66616c7365",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "825:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "802:28:0",
														"trueExpression": {
															"hexValue": "74727565",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "818:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "795:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "795:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 72,
															"name": "side",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "849:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 69,
															"name": "myFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "837:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_DeployedCoinFlip_$9",
																"typeString": "contract DeployedCoinFlip"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "flip",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "837:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
															"typeString": "function (bool) external returns (bool)"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "837:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "837:17:0"
											}
										]
									},
									"functionSelector": "b15c128e",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remotePsychicFlip",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "621:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:15:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "643:0:0"
									},
									"scope": 284,
									"src": "594:265:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "917:359:0",
										"statements": [
											{
												"expression": {
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 83,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "923:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 90,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 87,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "954:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 88,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "954:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 89,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "969:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "954:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 86,
																	"name": "blockhash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967291,
																	"src": "944:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																		"typeString": "function (uint256) view returns (bytes32)"
																	}
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "944:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "936:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 84,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "936:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "936:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "923:49:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 95,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "983:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 96,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "995:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "983:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 102,
												"nodeType": "IfStatement",
												"src": "979:51:0",
												"trueBody": {
													"id": 101,
													"nodeType": "Block",
													"src": "1007:23:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 98,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1015:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1015:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 100,
															"nodeType": "ExpressionStatement",
															"src": "1015:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1036:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1047:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1036:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1036:21:0"
											},
											{
												"expression": {
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 107,
														"name": "coinFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1063:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 108,
															"name": "blockValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1074:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 109,
															"name": "FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1087:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1074:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1063:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "1063:30:0"
											},
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1099:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 114,
																"name": "coinFlip",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "1106:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1118:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1106:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "66616c7365",
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1129:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "1106:28:0",
														"trueExpression": {
															"hexValue": "74727565",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1122:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1099:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1099:35:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 122,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1145:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 123,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "1153:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1145:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 137,
													"nodeType": "Block",
													"src": "1218:54:0",
													"statements": [
														{
															"expression": {
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 131,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1226:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1244:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1226:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 134,
															"nodeType": "ExpressionStatement",
															"src": "1226:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1260:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 82,
															"id": 136,
															"nodeType": "Return",
															"src": "1253:12:0"
														}
													]
												},
												"id": 138,
												"nodeType": "IfStatement",
												"src": "1141:131:0",
												"trueBody": {
													"id": 130,
													"nodeType": "Block",
													"src": "1161:51:0",
													"statements": [
														{
															"expression": {
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1169:17:0",
																"subExpression": {
																	"id": 125,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1169:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "1169:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1201:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 82,
															"id": 129,
															"nodeType": "Return",
															"src": "1194:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "04ac3f91",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "localFlip",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "_guess",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "882:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "882:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "881:13:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "911:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 80,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "911:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:6:0"
									},
									"scope": 284,
									"src": "863:413:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "1317:159:0",
										"statements": [
											{
												"expression": {
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 143,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1323:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 147,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "1354:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "1354:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1369:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1354:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 146,
																	"name": "blockhash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967291,
																	"src": "1344:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																		"typeString": "function (uint256) view returns (bytes32)"
																	}
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1344:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1336:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 144,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1336:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1336:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1323:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1323:49:0"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 155,
														"name": "coinFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1378:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 156,
															"name": "blockValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1389:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 157,
															"name": "FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1402:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1389:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1378:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1378:30:0"
											},
											{
												"expression": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1414:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "coinFlip",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "1421:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1433:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1421:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "66616c7365",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1444:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "1421:28:0",
														"trueExpression": {
															"hexValue": "74727565",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1437:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1414:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1414:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "side",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "1466:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 170,
														"name": "localFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "1456:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$_t_bool_$",
															"typeString": "function (bool) returns (bool)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1456:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1456:15:0"
											}
										]
									},
									"functionSelector": "0081fe1a",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "localPsychicFlip",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1307:2:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1317:0:0"
									},
									"scope": 284,
									"src": "1282:194:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "1691:26:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "74727565",
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1707:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 178,
														"name": "localFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "1697:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$_t_bool_$",
															"typeString": "function (bool) returns (bool)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1697:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "1697:15:0"
											}
										]
									},
									"functionSelector": "8c74ddb0",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "positiveFlip",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1681:2:0"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1691:0:0"
									},
									"scope": 284,
									"src": "1660:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1751:207:0",
										"statements": [
											{
												"expression": {
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 186,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1757:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 190,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "1788:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "1788:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1803:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1788:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 189,
																	"name": "blockhash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967291,
																	"src": "1778:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																		"typeString": "function (uint256) view returns (bytes32)"
																	}
																},
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1778:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 187,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1770:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1770:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1757:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "1757:49:0"
											},
											{
												"expression": {
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 198,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1813:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 199,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1824:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1813:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1813:21:0"
											},
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 202,
														"name": "coinFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1840:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 203,
															"name": "blockValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1851:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 204,
															"name": "FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1864:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1851:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1840:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1840:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 208,
														"name": "coinFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1880:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "31",
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1891:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1880:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 219,
													"nodeType": "Block",
													"src": "1931:23:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 216,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1939:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1939:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 218,
															"nodeType": "ExpressionStatement",
															"src": "1939:8:0"
														}
													]
												},
												"id": 220,
												"nodeType": "IfStatement",
												"src": "1877:77:0",
												"trueBody": {
													"id": 215,
													"nodeType": "Block",
													"src": "1894:31:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "66616c7365",
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1912:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 211,
																	"name": "localFlip",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "1902:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$_t_bool_$",
																		"typeString": "function (bool) returns (bool)"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1902:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 214,
															"nodeType": "ExpressionStatement",
															"src": "1902:16:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "a68ebe88",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCoinFlip",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:2:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1751:0:0"
									},
									"scope": 284,
									"src": "1721:237:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "2005:325:0",
										"statements": [
											{
												"expression": {
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 227,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "2011:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 231,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "2042:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "2042:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2057:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2042:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 230,
																	"name": "blockhash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967291,
																	"src": "2032:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																		"typeString": "function (uint256) view returns (bytes32)"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2032:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2024:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 228,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2024:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2024:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2011:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "2011:49:0"
											},
											{
												"expression": {
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 239,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2067:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 240,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "2078:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2067:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2067:21:0"
											},
											{
												"expression": {
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 243,
														"name": "coinFlip",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "2094:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 244,
															"name": "blockValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "2105:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 245,
															"name": "FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "2118:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2105:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2094:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "2094:30:0"
											},
											{
												"expression": {
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 249,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "2130:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 250,
																"name": "coinFlip",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "2137:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2149:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2137:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "66616c7365",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2160:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "2137:28:0",
														"trueExpression": {
															"hexValue": "74727565",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2153:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2130:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "2130:35:0"
											},
											{
												"condition": {
													"id": 258,
													"name": "side",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 22,
													"src": "2176:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "2257:69:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "74727565",
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2275:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 270,
																	"name": "localFlip",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "2265:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$_t_bool_$",
																		"typeString": "function (bool) returns (bool)"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2265:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 273,
															"nodeType": "ExpressionStatement",
															"src": "2265:15:0"
														},
														{
															"expression": {
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 274,
																	"name": "side",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "2288:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2295:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2288:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 277,
															"nodeType": "ExpressionStatement",
															"src": "2288:11:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2314:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 279,
															"nodeType": "Return",
															"src": "2307:12:0"
														}
													]
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "2172:154:0",
												"trueBody": {
													"id": 269,
													"nodeType": "Block",
													"src": "2182:69:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "74727565",
																		"id": 260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2200:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 259,
																	"name": "localFlip",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "2190:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$_t_bool_$",
																		"typeString": "function (bool) returns (bool)"
																	}
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2190:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 262,
															"nodeType": "ExpressionStatement",
															"src": "2190:15:0"
														},
														{
															"expression": {
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 263,
																	"name": "side",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "2213:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2220:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2213:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 266,
															"nodeType": "ExpressionStatement",
															"src": "2213:12:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2240:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 268,
															"nodeType": "Return",
															"src": "2233:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "5d06228b",
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "blankFlip",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1980:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1999:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1999:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:6:0"
									},
									"scope": 284,
									"src": "1962:368:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 285,
							"src": "139:2194:0"
						}
					],
					"src": "32:2301:0"
				},
				"id": 0
			}
		}
	}
}